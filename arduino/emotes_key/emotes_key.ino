#include <Adafruit_NeoPixel.h>
#include <Wire.h>

#define PIXEL_PIN 6
#define PIXEL_COUNT 432

Adafruit_NeoPixel strip = Adafruit_NeoPixel(PIXEL_COUNT, PIXEL_PIN, NEO_GRB + NEO_KHZ800);


int dizzy[2][22][2] = {{{4, 6}, {4, 17}, {5, 7}, {5, 16}, {6, 8}, {6, 15}, {7, 9}, {7, 14}, {8, 10}, {8, 13}, {9, 9}, {9, 14}, {10, 8}, {10, 15}, {11, 7}, {11, 16}, {12, 6}, {12, 10}, {12, 11}, {12, 12}, {12, 13}, {12, 17}}, {{5, 6}, {5, 17}, {6, 7}, {6, 16}, {7, 8}, {7, 9}, {7, 14}, {7, 15}, {8, 10}, {8, 13}, {9, 8}, {9, 9}, {9, 14}, {9, 15}, {10, 7}, {10, 16}, {11, 6}, {11, 17}, {12, 10}, {12, 11}, {12, 12}, {12, 13}}};
int wink[4][28][2] = {{{2, 7}, {2, 8}, {2, 9}, {2, 14}, {2, 15}, {2, 16}, {3, 6}, {3, 17}, {5, 9}, {5, 10}, {5, 14}, {5, 15}, {6, 8}, {6, 9}, {6, 10}, {6, 14}, {6, 15}, {11, 7}, {11, 17}, {12, 8}, {12, 16}, {13, 9}, {13, 10}, {13, 11}, {13, 12}, {13, 13}, {13, 14}, {13, 15}}, {{1, 14}, {1, 15}, {1, 16}, {2, 7}, {2, 8}, {2, 9}, {2, 17}, {3, 6}, {5, 9}, {5, 10}, {5, 14}, {5, 15}, {6, 8}, {6, 9}, {6, 10}, {6, 14}, {6, 15}, {11, 7}, {11, 17}, {12, 8}, {12, 16}, {13, 9}, {13, 10}, {13, 11}, {13, 12}, {13, 13}, {13, 14}, {13, 15}}, {{1, 7}, {1, 8}, {1, 9}, {1, 14}, {1, 15}, {1, 16}, {2, 6}, {2, 17}, {5, 9}, {5, 10}, {5, 14}, {5, 15}, {6, 8}, {6, 9}, {6, 10}, {6, 14}, {6, 15}, {11, 7}, {11, 17}, {12, 8}, {12, 16}, {13, 9}, {13, 10}, {13, 11}, {13, 12}, {13, 13}, {13, 14}, {13, 15}}, {{1, 7}, {1, 8}, {1, 9}, {2, 6}, {2, 14}, {2, 15}, {2, 16}, {3, 17}, {5, 9}, {5, 10}, {5, 14}, {5, 15}, {6, 8}, {6, 9}, {6, 10}, {6, 14}, {6, 15}, {11, 7}, {11, 17}, {12, 8}, {12, 16}, {13, 9}, {13, 10}, {13, 11}, {13, 12}, {13, 13}, {13, 14}, {13, 15}}};
int sad[4][20][2] = {{{5, 9}, {5, 10}, {5, 14}, {5, 15}, {6, 9}, {6, 10}, {6, 14}, {6, 15}, {10, 9}, {10, 10}, {10, 11}, {10, 12}, {10, 13}, {10, 14}, {10, 15}, {11, 8}, {11, 16}, {12, 7}, {12, 17}, { -1, -1}}, {{5, 9}, {5, 10}, {5, 14}, {5, 15}, {6, 9}, {6, 10}, {6, 14}, {6, 15}, {7, 16}, {10, 9}, {10, 10}, {10, 11}, {10, 12}, {10, 13}, {10, 14}, {10, 15}, {11, 8}, {11, 16}, {12, 7}, {12, 17}}, {{5, 9}, {5, 10}, {5, 14}, {5, 15}, {6, 9}, {6, 10}, {6, 14}, {6, 15}, {8, 17}, {10, 9}, {10, 10}, {10, 11}, {10, 12}, {10, 13}, {10, 14}, {10, 15}, {11, 8}, {11, 16}, {12, 7}, {12, 17}}, {{5, 9}, {5, 10}, {5, 14}, {5, 15}, {6, 9}, {6, 10}, {6, 14}, {6, 15}, {9, 18}, {10, 9}, {10, 10}, {10, 11}, {10, 12}, {10, 13}, {10, 14}, {10, 15}, {11, 8}, {11, 16}, {12, 7}, {12, 17}}};
int happy[2][19][2] = {{{5, 9}, {5, 10}, {5, 14}, {5, 15}, {6, 9}, {6, 10}, {6, 14}, {6, 15}, {11, 7}, {11, 17}, {12, 8}, {12, 16}, {13, 9}, {13, 10}, {13, 11}, {13, 12}, {13, 13}, {13, 14}, {13, 15}}, {{6, 8}, {6, 9}, {6, 10}, {6, 14}, {6, 15}, {6, 16}, {11, 7}, {11, 17}, {12, 8}, {12, 16}, {13, 9}, {13, 10}, {13, 11}, {13, 12}, {13, 13}, {13, 14}, {13, 15}, { -1, -1}, { -1, -1}}};
int face3[2][45][5] = {{{2, 5, 244, 67, 54}, {2, 6, 244, 67, 54}, {2, 16, 244, 67, 54}, {2, 17, 244, 67, 54}, {3, 4, 244, 67, 54}, {3, 18, 244, 67, 54}, {4, 3, 244, 67, 54}, {4, 19, 244, 67, 54}, {5, 3, 244, 67, 54}, {5, 6, 244, 67, 54}, {5, 7, 244, 67, 54}, {5, 8, 244, 67, 54}, {5, 9, 244, 67, 54}, {5, 13, 244, 67, 54}, {5, 14, 244, 67, 54}, {5, 15, 244, 67, 54}, {5, 16, 244, 67, 54}, {5, 19, 244, 67, 54}, {6, 3, 244, 67, 54}, {6, 8, 244, 67, 54}, {6, 15, 244, 67, 54}, {6, 19, 244, 67, 54}, {7, 3, 244, 67, 54}, {7, 19, 244, 67, 54}, {8, 3, 244, 67, 54}, {8, 9, 244, 67, 54}, {8, 13, 244, 67, 54}, {8, 19, 244, 67, 54}, {9, 3, 244, 67, 54}, {9, 9, 244, 67, 54}, {9, 11, 244, 67, 54}, {9, 13, 244, 67, 54}, {9, 19, 244, 67, 54}, {10, 3, 244, 67, 54}, {10, 10, 244, 67, 54}, {10, 12, 244, 67, 54}, {10, 19, 244, 67, 54}, {11, 3, 244, 67, 54}, {11, 19, 244, 67, 54}, {12, 4, 244, 67, 54}, {12, 18, 244, 67, 54}, {13, 5, 244, 67, 54}, {13, 6, 244, 67, 54}, {13, 16, 244, 67, 54}, {13, 17, 244, 67, 54}}, {{2, 5, 244, 67, 54}, {2, 6, 244, 67, 54}, {2, 16, 244, 67, 54}, {2, 17, 244, 67, 54}, {3, 4, 244, 67, 54}, {3, 18, 244, 67, 54}, {4, 3, 244, 67, 54}, {4, 19, 244, 67, 54}, {5, 3, 244, 67, 54}, {5, 6, 244, 67, 54}, {5, 7, 244, 67, 54}, {5, 8, 244, 67, 54}, {5, 9, 244, 67, 54}, {5, 13, 244, 67, 54}, {5, 14, 244, 67, 54}, {5, 15, 244, 67, 54}, {5, 16, 244, 67, 54}, {5, 19, 244, 67, 54}, {6, 3, 244, 67, 54}, {6, 6, 244, 67, 54}, {6, 13, 244, 67, 54}, {6, 19, 244, 67, 54}, {7, 3, 244, 67, 54}, {7, 19, 244, 67, 54}, {8, 3, 244, 67, 54}, {8, 9, 244, 67, 54}, {8, 13, 244, 67, 54}, {8, 19, 244, 67, 54}, {9, 3, 244, 67, 54}, {9, 9, 244, 67, 54}, {9, 11, 244, 67, 54}, {9, 13, 244, 67, 54}, {9, 19, 244, 67, 54}, {10, 3, 244, 67, 54}, {10, 10, 244, 67, 54}, {10, 12, 244, 67, 54}, {10, 19, 244, 67, 54}, {11, 3, 244, 67, 54}, {11, 19, 244, 67, 54}, {12, 4, 244, 67, 54}, {12, 18, 244, 67, 54}, {13, 5, 244, 67, 54}, {13, 6, 244, 67, 54}, {13, 16, 244, 67, 54}, {13, 17, 244, 67, 54}}};
int dance[4][59][5] = {{{2, 5, 244, 67, 54}, {2, 6, 244, 67, 54}, {2, 16, 244, 67, 54}, {2, 17, 244, 67, 54}, {3, 4, 244, 67, 54}, {3, 18, 244, 67, 54}, {4, 3, 244, 67, 54}, {4, 19, 244, 67, 54}, {5, 3, 244, 67, 54}, {5, 10, 244, 67, 54}, {5, 11, 244, 67, 54}, {5, 15, 244, 67, 54}, {5, 16, 244, 67, 54}, {5, 19, 244, 67, 54}, {6, 3, 244, 67, 54}, {6, 10, 244, 67, 54}, {6, 11, 244, 67, 54}, {6, 15, 244, 67, 54}, {6, 16, 244, 67, 54}, {6, 19, 244, 67, 54}, {7, 3, 244, 67, 54}, {7, 5, 244, 67, 54}, {7, 6, 244, 67, 54}, {7, 7, 244, 67, 54}, {7, 8, 244, 67, 54}, {7, 19, 244, 67, 54}, {7, 20, 244, 67, 54}, {7, 21, 244, 67, 54}, {7, 22, 244, 67, 54}, {8, 3, 244, 67, 54}, {8, 8, 244, 67, 54}, {8, 11, 244, 67, 54}, {8, 15, 244, 67, 54}, {8, 19, 244, 67, 54}, {8, 22, 244, 67, 54}, {9, 3, 244, 67, 54}, {9, 8, 244, 67, 54}, {9, 12, 244, 67, 54}, {9, 13, 244, 67, 54}, {9, 14, 244, 67, 54}, {9, 19, 244, 67, 54}, {9, 22, 244, 67, 54}, {10, 3, 244, 67, 54}, {10, 5, 244, 67, 54}, {10, 6, 244, 67, 54}, {10, 7, 244, 67, 54}, {10, 8, 244, 67, 54}, {10, 19, 244, 67, 54}, {10, 20, 244, 67, 54}, {10, 21, 244, 67, 54}, {10, 22, 244, 67, 54}, {11, 3, 244, 67, 54}, {11, 19, 244, 67, 54}, {12, 4, 244, 67, 54}, {12, 18, 244, 67, 54}, {13, 5, 244, 67, 54}, {13, 6, 244, 67, 54}, {13, 16, 244, 67, 54}, {13, 17, 244, 67, 54}}, {{2, 5, 244, 67, 54}, {2, 6, 244, 67, 54}, {2, 16, 244, 67, 54}, {2, 17, 244, 67, 54}, {3, 4, 244, 67, 54}, {3, 18, 244, 67, 54}, {4, 3, 244, 67, 54}, {4, 19, 244, 67, 54}, {5, 3, 244, 67, 54}, {5, 19, 244, 67, 54}, {6, 3, 244, 67, 54}, {6, 5, 244, 67, 54}, {6, 6, 244, 67, 54}, {6, 7, 244, 67, 54}, {6, 8, 244, 67, 54}, {6, 10, 244, 67, 54}, {6, 11, 244, 67, 54}, {6, 15, 244, 67, 54}, {6, 16, 244, 67, 54}, {6, 19, 244, 67, 54}, {7, 3, 244, 67, 54}, {7, 5, 244, 67, 54}, {7, 8, 244, 67, 54}, {7, 19, 244, 67, 54}, {7, 20, 244, 67, 54}, {7, 21, 244, 67, 54}, {7, 22, 244, 67, 54}, {8, 3, 244, 67, 54}, {8, 5, 244, 67, 54}, {8, 8, 244, 67, 54}, {8, 11, 244, 67, 54}, {8, 15, 244, 67, 54}, {8, 19, 244, 67, 54}, {8, 22, 244, 67, 54}, {9, 3, 244, 67, 54}, {9, 5, 244, 67, 54}, {9, 8, 244, 67, 54}, {9, 12, 244, 67, 54}, {9, 13, 244, 67, 54}, {9, 14, 244, 67, 54}, {9, 19, 244, 67, 54}, {9, 22, 244, 67, 54}, {10, 3, 244, 67, 54}, {10, 19, 244, 67, 54}, {10, 20, 244, 67, 54}, {10, 21, 244, 67, 54}, {10, 22, 244, 67, 54}, {11, 3, 244, 67, 54}, {11, 19, 244, 67, 54}, {12, 4, 244, 67, 54}, {12, 18, 244, 67, 54}, {13, 5, 244, 67, 54}, {13, 6, 244, 67, 54}, {13, 16, 244, 67, 54}, {13, 17, 244, 67, 54}, { -1, -1, 165, 165, 165}, { -1, -1, 165, 165, 165}, { -1, -1, 165, 165, 165}, { -1, -1, 165, 165, 165}}, {{2, 5, 244, 67, 54}, {2, 6, 244, 67, 54}, {2, 16, 244, 67, 54}, {2, 17, 244, 67, 54}, {3, 4, 244, 67, 54}, {3, 18, 244, 67, 54}, {4, 3, 244, 67, 54}, {4, 19, 244, 67, 54}, {5, 3, 244, 67, 54}, {5, 10, 244, 67, 54}, {5, 11, 244, 67, 54}, {5, 15, 244, 67, 54}, {5, 16, 244, 67, 54}, {5, 19, 244, 67, 54}, {6, 3, 244, 67, 54}, {6, 10, 244, 67, 54}, {6, 11, 244, 67, 54}, {6, 15, 244, 67, 54}, {6, 16, 244, 67, 54}, {6, 19, 244, 67, 54}, {7, 1, 244, 67, 54}, {7, 2, 244, 67, 54}, {7, 3, 244, 67, 54}, {7, 4, 244, 67, 54}, {7, 19, 244, 67, 54}, {7, 20, 244, 67, 54}, {7, 21, 244, 67, 54}, {7, 22, 244, 67, 54}, {8, 1, 244, 67, 54}, {8, 11, 244, 67, 54}, {8, 15, 244, 67, 54}, {8, 19, 244, 67, 54}, {8, 22, 244, 67, 54}, {9, 1, 244, 67, 54}, {9, 12, 244, 67, 54}, {9, 13, 244, 67, 54}, {9, 14, 244, 67, 54}, {9, 19, 244, 67, 54}, {9, 22, 244, 67, 54}, {10, 1, 244, 67, 54}, {10, 2, 244, 67, 54}, {10, 3, 244, 67, 54}, {10, 4, 244, 67, 54}, {10, 19, 244, 67, 54}, {10, 20, 244, 67, 54}, {10, 21, 244, 67, 54}, {10, 22, 244, 67, 54}, {11, 3, 244, 67, 54}, {11, 19, 244, 67, 54}, {12, 4, 244, 67, 54}, {12, 18, 244, 67, 54}, {13, 5, 244, 67, 54}, {13, 6, 244, 67, 54}, {13, 16, 244, 67, 54}, {13, 17, 244, 67, 54}, { -1, -1, 165, 165, 165}, { -1, -1, 165, 165, 165}, { -1, -1, 165, 165, 165}, { -1, -1, 165, 165, 165}}, {{2, 5, 244, 67, 54}, {2, 6, 244, 67, 54}, {2, 16, 244, 67, 54}, {2, 17, 244, 67, 54}, {3, 4, 244, 67, 54}, {3, 18, 244, 67, 54}, {4, 3, 244, 67, 54}, {4, 19, 244, 67, 54}, {5, 3, 244, 67, 54}, {5, 7, 244, 67, 54}, {5, 8, 244, 67, 54}, {5, 9, 244, 67, 54}, {5, 13, 244, 67, 54}, {5, 14, 244, 67, 54}, {5, 15, 244, 67, 54}, {5, 19, 244, 67, 54}, {6, 3, 244, 67, 54}, {6, 7, 244, 67, 54}, {6, 9, 244, 67, 54}, {6, 13, 244, 67, 54}, {6, 15, 244, 67, 54}, {6, 19, 244, 67, 54}, {7, 1, 244, 67, 54}, {7, 2, 244, 67, 54}, {7, 3, 244, 67, 54}, {7, 19, 244, 67, 54}, {7, 20, 244, 67, 54}, {7, 21, 244, 67, 54}, {8, 1, 244, 67, 54}, {8, 3, 244, 67, 54}, {8, 9, 244, 67, 54}, {8, 13, 244, 67, 54}, {8, 19, 244, 67, 54}, {8, 21, 244, 67, 54}, {9, 1, 244, 67, 54}, {9, 3, 244, 67, 54}, {9, 10, 244, 67, 54}, {9, 11, 244, 67, 54}, {9, 12, 244, 67, 54}, {9, 19, 244, 67, 54}, {9, 21, 244, 67, 54}, {10, 1, 244, 67, 54}, {10, 2, 244, 67, 54}, {10, 3, 244, 67, 54}, {10, 19, 244, 67, 54}, {10, 20, 244, 67, 54}, {10, 21, 244, 67, 54}, {11, 3, 244, 67, 54}, {11, 19, 244, 67, 54}, {12, 4, 244, 67, 54}, {12, 18, 244, 67, 54}, {13, 5, 244, 67, 54}, {13, 6, 244, 67, 54}, {13, 16, 244, 67, 54}, {13, 17, 244, 67, 54}, { -1, -1, 165, 165, 165}, { -1, -1, 165, 165, 165}, { -1, -1, 165, 165, 165}, { -1, -1, 165, 165, 165}}};
int fite[1][70][5] = {{{4, 4, 233, 30, 99}, {4, 5, 233, 30, 99}, {4, 16, 233, 30, 99}, {4, 17, 233, 30, 99}, {5, 3, 233, 30, 99}, {5, 4, 233, 30, 99}, {5, 17, 233, 30, 99}, {5, 18, 233, 30, 99}, {6, 2, 233, 30, 99}, {6, 3, 233, 30, 99}, {6, 11, 233, 30, 99}, {6, 15, 233, 30, 99}, {6, 18, 233, 30, 99}, {6, 19, 233, 30, 99}, {7, 2, 233, 30, 99}, {7, 7, 233, 30, 99}, {7, 8, 233, 30, 99}, {7, 12, 233, 30, 99}, {7, 14, 233, 30, 99}, {7, 19, 233, 30, 99}, {7, 21, 233, 30, 99}, {7, 22, 233, 30, 99}, {8, 2, 233, 30, 99}, {8, 7, 233, 30, 99}, {8, 8, 233, 30, 99}, {8, 11, 233, 30, 99}, {8, 15, 233, 30, 99}, {8, 19, 233, 30, 99}, {8, 21, 233, 30, 99}, {8, 22, 233, 30, 99}, {9, 2, 233, 30, 99}, {9, 4, 233, 30, 99}, {9, 5, 233, 30, 99}, {9, 8, 233, 30, 99}, {9, 11, 233, 30, 99}, {9, 15, 233, 30, 99}, {9, 19, 233, 30, 99}, {9, 22, 233, 30, 99}, {10, 2, 233, 30, 99}, {10, 5, 233, 30, 99}, {10, 6, 233, 30, 99}, {10, 8, 233, 30, 99}, {10, 19, 233, 30, 99}, {10, 20, 233, 30, 99}, {10, 22, 233, 30, 99}, {11, 2, 233, 30, 99}, {11, 6, 233, 30, 99}, {11, 7, 233, 30, 99}, {11, 8, 233, 30, 99}, {11, 11, 233, 30, 99}, {11, 12, 233, 30, 99}, {11, 13, 233, 30, 99}, {11, 14, 233, 30, 99}, {11, 15, 233, 30, 99}, {11, 19, 233, 30, 99}, {11, 20, 233, 30, 99}, {11, 21, 233, 30, 99}, {11, 22, 233, 30, 99}, {12, 2, 233, 30, 99}, {12, 3, 233, 30, 99}, {12, 18, 233, 30, 99}, {12, 19, 233, 30, 99}, {13, 3, 233, 30, 99}, {13, 4, 233, 30, 99}, {13, 17, 233, 30, 99}, {13, 18, 233, 30, 99}, {14, 4, 233, 30, 99}, {14, 5, 233, 30, 99}, {14, 16, 233, 30, 99}, {14, 17, 233, 30, 99}}};
int lenny[1][97][5] = {{{2, 3, 233, 30, 99}, {2, 4, 233, 30, 99}, {2, 5, 233, 30, 99}, {2, 18, 233, 30, 99}, {2, 19, 233, 30, 99}, {2, 20, 233, 30, 99}, {3, 2, 233, 30, 99}, {3, 3, 233, 30, 99}, {3, 20, 233, 30, 99}, {3, 21, 233, 30, 99}, {4, 1, 233, 30, 99}, {4, 2, 233, 30, 99}, {4, 21, 233, 30, 99}, {4, 22, 233, 30, 99}, {5, 0, 233, 30, 99}, {5, 1, 233, 30, 99}, {5, 4, 233, 30, 99}, {5, 5, 233, 30, 99}, {5, 6, 233, 30, 99}, {5, 7, 233, 30, 99}, {5, 8, 233, 30, 99}, {5, 9, 233, 30, 99}, {5, 12, 233, 30, 99}, {5, 15, 233, 30, 99}, {5, 16, 233, 30, 99}, {5, 17, 233, 30, 99}, {5, 18, 233, 30, 99}, {5, 19, 233, 30, 99}, {5, 20, 233, 30, 99}, {5, 22, 233, 30, 99}, {5, 23, 233, 30, 99}, {6, 0, 233, 30, 99}, {6, 3, 233, 30, 99}, {6, 4, 233, 30, 99}, {6, 6, 233, 30, 99}, {6, 8, 233, 30, 99}, {6, 9, 233, 30, 99}, {6, 10, 233, 30, 99}, {6, 12, 233, 30, 99}, {6, 14, 233, 30, 99}, {6, 15, 233, 30, 99}, {6, 17, 233, 30, 99}, {6, 19, 233, 30, 99}, {6, 20, 233, 30, 99}, {6, 21, 233, 30, 99}, {6, 23, 233, 30, 99}, {7, 0, 233, 30, 99}, {7, 4, 233, 30, 99}, {7, 5, 233, 30, 99}, {7, 6, 233, 30, 99}, {7, 12, 233, 30, 99}, {7, 15, 233, 30, 99}, {7, 16, 233, 30, 99}, {7, 17, 233, 30, 99}, {7, 23, 233, 30, 99}, {8, 0, 233, 30, 99}, {8, 12, 233, 30, 99}, {8, 13, 233, 30, 99}, {8, 23, 233, 30, 99}, {9, 0, 233, 30, 99}, {9, 13, 233, 30, 99}, {9, 23, 233, 30, 99}, {10, 0, 233, 30, 99}, {10, 11, 233, 30, 99}, {10, 12, 233, 30, 99}, {10, 13, 233, 30, 99}, {10, 23, 233, 30, 99}, {11, 0, 233, 30, 99}, {11, 1, 233, 30, 99}, {11, 7, 233, 30, 99}, {11, 16, 233, 30, 99}, {11, 22, 233, 30, 99}, {11, 23, 233, 30, 99}, {12, 1, 233, 30, 99}, {12, 2, 233, 30, 99}, {12, 7, 233, 30, 99}, {12, 8, 233, 30, 99}, {12, 15, 233, 30, 99}, {12, 16, 233, 30, 99}, {12, 21, 233, 30, 99}, {12, 22, 233, 30, 99}, {13, 2, 233, 30, 99}, {13, 3, 233, 30, 99}, {13, 9, 233, 30, 99}, {13, 10, 233, 30, 99}, {13, 11, 233, 30, 99}, {13, 12, 233, 30, 99}, {13, 13, 233, 30, 99}, {13, 14, 233, 30, 99}, {13, 20, 233, 30, 99}, {13, 21, 233, 30, 99}, {14, 3, 233, 30, 99}, {14, 4, 233, 30, 99}, {14, 5, 233, 30, 99}, {14, 18, 233, 30, 99}, {14, 19, 233, 30, 99}, {14, 20, 233, 30, 99}}};
int metanight[2][125][5] = {{{4, 5, 103, 58, 183}, {4, 6, 103, 58, 183}, {4, 18, 103, 58, 183}, {4, 19, 103, 58, 183}, {5, 2, 117, 111, 212}, {5, 3, 103, 58, 183}, {5, 4, 103, 58, 183}, {5, 5, 103, 58, 183}, {5, 6, 103, 58, 183}, {5, 18, 103, 58, 183}, {5, 19, 103, 58, 183}, {5, 20, 103, 58, 183}, {5, 21, 103, 58, 183}, {5, 22, 117, 111, 212}, {6, 4, 117, 111, 212}, {6, 5, 103, 58, 183}, {6, 6, 103, 58, 183}, {6, 7, 103, 58, 183}, {6, 10, 63, 81, 181}, {6, 11, 63, 81, 181}, {6, 12, 63, 81, 181}, {6, 13, 63, 81, 181}, {6, 14, 63, 81, 181}, {6, 17, 103, 58, 183}, {6, 18, 103, 58, 183}, {6, 19, 103, 58, 183}, {6, 20, 117, 111, 212}, {7, 4, 117, 111, 212}, {7, 5, 117, 111, 212}, {7, 6, 103, 58, 183}, {7, 7, 103, 58, 183}, {7, 8, 103, 58, 183}, {7, 9, 63, 81, 181}, {7, 10, 63, 81, 181}, {7, 11, 63, 81, 181}, {7, 12, 63, 81, 181}, {7, 13, 63, 81, 181}, {7, 14, 63, 81, 181}, {7, 15, 63, 81, 181}, {7, 16, 103, 58, 183}, {7, 17, 103, 58, 183}, {7, 18, 103, 58, 183}, {7, 19, 117, 111, 212}, {7, 20, 117, 111, 212}, {8, 5, 117, 111, 212}, {8, 6, 117, 111, 212}, {8, 7, 117, 111, 212}, {8, 8, 103, 58, 183}, {8, 9, 63, 81, 181}, {8, 10, 0, 0, 0}, {8, 11, 158, 158, 158}, {8, 12, 96, 125, 139}, {8, 13, 158, 158, 158}, {8, 14, 0, 0, 0}, {8, 15, 63, 81, 181}, {8, 16, 103, 58, 183}, {8, 17, 117, 111, 212}, {8, 18, 117, 111, 212}, {8, 19, 117, 111, 212}, {9, 7, 117, 111, 212}, {9, 8, 103, 58, 183}, {9, 9, 63, 81, 181}, {9, 10, 0, 0, 0}, {9, 11, 255, 235, 59}, {9, 12, 0, 0, 0}, {9, 13, 255, 235, 59}, {9, 14, 0, 0, 0}, {9, 15, 63, 81, 181}, {9, 16, 103, 58, 183}, {9, 17, 117, 111, 212}, {10, 7, 158, 158, 158}, {10, 8, 255, 193, 7}, {10, 9, 63, 81, 181}, {10, 10, 158, 158, 158}, {10, 11, 0, 0, 0}, {10, 12, 0, 0, 0}, {10, 13, 0, 0, 0}, {10, 14, 158, 158, 158}, {10, 15, 63, 81, 181}, {10, 16, 158, 158, 158}, {10, 17, 158, 158, 158}, {11, 6, 255, 235, 59}, {11, 7, 255, 87, 34}, {11, 8, 158, 158, 158}, {11, 10, 63, 81, 181}, {11, 11, 158, 158, 158}, {11, 12, 96, 125, 139}, {11, 13, 158, 158, 158}, {11, 14, 63, 81, 181}, {11, 16, 158, 158, 158}, {11, 17, 158, 158, 158}, {12, 5, 255, 235, 59}, {12, 6, 255, 193, 7}, {12, 7, 255, 193, 7}, {12, 9, 156, 39, 176}, {12, 10, 156, 39, 176}, {12, 11, 63, 81, 181}, {12, 12, 63, 81, 181}, {12, 13, 63, 81, 181}, {12, 14, 156, 39, 176}, {12, 15, 156, 39, 176}, {13, 4, 255, 235, 59}, {13, 5, 255, 193, 7}, {13, 6, 255, 193, 7}, {13, 9, 103, 58, 183}, {13, 10, 103, 58, 183}, {13, 14, 103, 58, 183}, {13, 15, 103, 58, 183}, {14, 4, 255, 235, 59}, {14, 5, 255, 193, 7}, { -1, -1, 165, 165, 165}, { -1, -1, 165, 165, 165}, { -1, -1, 165, 165, 165}, { -1, -1, 165, 165, 165}, { -1, -1, 165, 165, 165}, { -1, -1, 165, 165, 165}, { -1, -1, 165, 165, 165}, { -1, -1, 165, 165, 165}, { -1, -1, 165, 165, 165}, { -1, -1, 165, 165, 165}, { -1, -1, 165, 165, 165}, { -1, -1, 165, 165, 165}, { -1, -1, 165, 165, 165}, { -1, -1, 165, 165, 165}, { -1, -1, 165, 165, 165}}, {{4, 2, 103, 58, 183}, {4, 3, 103, 58, 183}, {4, 4, 103, 58, 183}, {4, 5, 103, 58, 183}, {4, 6, 103, 58, 183}, {4, 18, 103, 58, 183}, {4, 19, 103, 58, 183}, {4, 20, 103, 58, 183}, {4, 21, 103, 58, 183}, {4, 22, 103, 58, 183}, {5, 2, 117, 111, 212}, {5, 3, 117, 111, 212}, {5, 4, 117, 111, 212}, {5, 5, 117, 111, 212}, {5, 6, 103, 58, 183}, {5, 18, 103, 58, 183}, {5, 19, 117, 111, 212}, {5, 20, 117, 111, 212}, {5, 21, 117, 111, 212}, {5, 22, 117, 111, 212}, {6, 3, 117, 111, 212}, {6, 4, 117, 111, 212}, {6, 5, 117, 111, 212}, {6, 6, 103, 58, 183}, {6, 18, 103, 58, 183}, {6, 19, 117, 111, 212}, {6, 20, 117, 111, 212}, {6, 21, 117, 111, 212}, {7, 4, 117, 111, 212}, {7, 5, 117, 111, 212}, {7, 6, 117, 111, 212}, {7, 7, 103, 58, 183}, {7, 10, 63, 81, 181}, {7, 11, 63, 81, 181}, {7, 12, 63, 81, 181}, {7, 13, 63, 81, 181}, {7, 14, 63, 81, 181}, {7, 17, 103, 58, 183}, {7, 18, 117, 111, 212}, {7, 19, 117, 111, 212}, {7, 20, 117, 111, 212}, {8, 4, 117, 111, 212}, {8, 5, 117, 111, 212}, {8, 6, 117, 111, 212}, {8, 7, 103, 58, 183}, {8, 8, 103, 58, 183}, {8, 9, 63, 81, 181}, {8, 10, 63, 81, 181}, {8, 11, 63, 81, 181}, {8, 12, 63, 81, 181}, {8, 13, 63, 81, 181}, {8, 14, 63, 81, 181}, {8, 15, 63, 81, 181}, {8, 16, 103, 58, 183}, {8, 17, 103, 58, 183}, {8, 18, 117, 111, 212}, {8, 19, 117, 111, 212}, {8, 20, 117, 111, 212}, {9, 5, 117, 111, 212}, {9, 6, 117, 111, 212}, {9, 7, 117, 111, 212}, {9, 8, 103, 58, 183}, {9, 9, 63, 81, 181}, {9, 10, 0, 0, 0}, {9, 11, 158, 158, 158}, {9, 12, 96, 125, 139}, {9, 13, 158, 158, 158}, {9, 14, 0, 0, 0}, {9, 15, 63, 81, 181}, {9, 16, 103, 58, 183}, {9, 17, 117, 111, 212}, {9, 18, 117, 111, 212}, {9, 19, 117, 111, 212}, {10, 6, 117, 111, 212}, {10, 7, 117, 111, 212}, {10, 8, 255, 193, 7}, {10, 9, 63, 81, 181}, {10, 10, 0, 0, 0}, {10, 11, 255, 235, 59}, {10, 12, 0, 0, 0}, {10, 13, 255, 235, 59}, {10, 14, 0, 0, 0}, {10, 15, 63, 81, 181}, {10, 16, 103, 58, 183}, {10, 17, 117, 111, 212}, {10, 18, 117, 111, 212}, {11, 6, 255, 235, 59}, {11, 7, 244, 67, 54}, {11, 8, 158, 158, 158}, {11, 9, 63, 81, 181}, {11, 10, 158, 158, 158}, {11, 11, 0, 0, 0}, {11, 12, 0, 0, 0}, {11, 13, 0, 0, 0}, {11, 14, 158, 158, 158}, {11, 15, 63, 81, 181}, {11, 16, 158, 158, 158}, {11, 17, 158, 158, 158}, {12, 5, 255, 235, 59}, {12, 6, 255, 235, 59}, {12, 7, 255, 193, 7}, {12, 8, 158, 158, 158}, {12, 10, 63, 81, 181}, {12, 11, 158, 158, 158}, {12, 12, 96, 125, 139}, {12, 13, 158, 158, 158}, {12, 14, 63, 81, 181}, {12, 16, 158, 158, 158}, {12, 17, 158, 158, 158}, {13, 4, 255, 235, 59}, {13, 5, 255, 235, 59}, {13, 6, 255, 193, 7}, {13, 9, 156, 39, 176}, {13, 10, 156, 39, 176}, {13, 11, 63, 81, 181}, {13, 12, 63, 81, 181}, {13, 13, 63, 81, 181}, {13, 14, 156, 39, 176}, {13, 15, 156, 39, 176}, {14, 4, 255, 235, 59}, {14, 5, 255, 193, 7}, {14, 9, 103, 58, 183}, {14, 10, 103, 58, 183}, {14, 14, 103, 58, 183}, {14, 15, 103, 58, 183}}};
int O_O[1][67][5] = {{{5, 4, 244, 67, 54}, {5, 5, 244, 67, 54}, {5, 6, 244, 67, 54}, {5, 12, 244, 67, 54}, {5, 18, 244, 67, 54}, {5, 19, 244, 67, 54}, {5, 20, 244, 67, 54}, {6, 3, 244, 67, 54}, {6, 7, 244, 67, 54}, {6, 12, 244, 67, 54}, {6, 17, 244, 67, 54}, {6, 21, 244, 67, 54}, {7, 2, 244, 67, 54}, {7, 4, 244, 67, 54}, {7, 5, 244, 67, 54}, {7, 6, 244, 67, 54}, {7, 8, 244, 67, 54}, {7, 12, 244, 67, 54}, {7, 16, 244, 67, 54}, {7, 18, 244, 67, 54}, {7, 19, 244, 67, 54}, {7, 20, 244, 67, 54}, {7, 22, 244, 67, 54}, {8, 2, 244, 67, 54}, {8, 5, 244, 67, 54}, {8, 6, 244, 67, 54}, {8, 8, 244, 67, 54}, {8, 12, 244, 67, 54}, {8, 16, 244, 67, 54}, {8, 19, 244, 67, 54}, {8, 20, 244, 67, 54}, {8, 22, 244, 67, 54}, {9, 2, 244, 67, 54}, {9, 4, 244, 67, 54}, {9, 5, 244, 67, 54}, {9, 6, 244, 67, 54}, {9, 8, 244, 67, 54}, {9, 12, 244, 67, 54}, {9, 13, 244, 67, 54}, {9, 16, 244, 67, 54}, {9, 18, 244, 67, 54}, {9, 19, 244, 67, 54}, {9, 20, 244, 67, 54}, {9, 22, 244, 67, 54}, {10, 3, 244, 67, 54}, {10, 7, 244, 67, 54}, {10, 13, 244, 67, 54}, {10, 17, 244, 67, 54}, {10, 21, 244, 67, 54}, {11, 4, 244, 67, 54}, {11, 5, 244, 67, 54}, {11, 6, 244, 67, 54}, {11, 11, 244, 67, 54}, {11, 12, 244, 67, 54}, {11, 13, 244, 67, 54}, {11, 18, 244, 67, 54}, {11, 19, 244, 67, 54}, {11, 20, 244, 67, 54}, {13, 8, 244, 67, 54}, {13, 9, 244, 67, 54}, {13, 10, 244, 67, 54}, {13, 11, 244, 67, 54}, {13, 12, 244, 67, 54}, {13, 13, 244, 67, 54}, {13, 14, 244, 67, 54}, {13, 15, 244, 67, 54}, {13, 16, 244, 67, 54}}};
int sunglasses[1][60][5] = {{{2, 5, 244, 67, 54}, {2, 6, 244, 67, 54}, {2, 16, 244, 67, 54}, {2, 17, 244, 67, 54}, {3, 4, 244, 67, 54}, {3, 18, 244, 67, 54}, {4, 3, 244, 67, 54}, {4, 19, 244, 67, 54}, {5, 3, 244, 67, 54}, {5, 6, 244, 67, 54}, {5, 7, 244, 67, 54}, {5, 8, 244, 67, 54}, {5, 9, 244, 67, 54}, {5, 10, 244, 67, 54}, {5, 11, 244, 67, 54}, {5, 12, 244, 67, 54}, {5, 13, 244, 67, 54}, {5, 14, 244, 67, 54}, {5, 15, 244, 67, 54}, {5, 16, 244, 67, 54}, {5, 17, 244, 67, 54}, {5, 19, 244, 67, 54}, {6, 3, 244, 67, 54}, {6, 6, 244, 67, 54}, {6, 9, 244, 67, 54}, {6, 10, 244, 67, 54}, {6, 11, 244, 67, 54}, {6, 12, 244, 67, 54}, {6, 14, 244, 67, 54}, {6, 15, 244, 67, 54}, {6, 16, 244, 67, 54}, {6, 17, 244, 67, 54}, {6, 19, 244, 67, 54}, {7, 3, 244, 67, 54}, {7, 9, 244, 67, 54}, {7, 10, 244, 67, 54}, {7, 11, 244, 67, 54}, {7, 12, 244, 67, 54}, {7, 14, 244, 67, 54}, {7, 15, 244, 67, 54}, {7, 16, 244, 67, 54}, {7, 17, 244, 67, 54}, {7, 19, 244, 67, 54}, {8, 3, 244, 67, 54}, {8, 19, 244, 67, 54}, {9, 3, 244, 67, 54}, {9, 12, 244, 67, 54}, {9, 13, 244, 67, 54}, {9, 14, 244, 67, 54}, {9, 19, 244, 67, 54}, {10, 3, 244, 67, 54}, {10, 19, 244, 67, 54}, {11, 3, 244, 67, 54}, {11, 19, 244, 67, 54}, {12, 4, 244, 67, 54}, {12, 18, 244, 67, 54}, {13, 5, 244, 67, 54}, {13, 6, 244, 67, 54}, {13, 16, 244, 67, 54}, {13, 17, 244, 67, 54}}};

int angry[2][18][5] = {{{5, 7, 165, 17, 0}, {5, 13, 165, 17, 0}, {5, 14, 165, 17, 0}, {6, 8, 165, 17, 0}, {6, 11, 165, 17, 0}, {6, 13, 165, 17, 0}, {7, 9, 165, 17, 0}, {7, 13, 165, 17, 0}, {8, 10, 165, 17, 0}, {8, 13, 165, 17, 0}, {9, 9, 165, 17, 0}, {9, 13, 165, 17, 0}, {10, 8, 165, 17, 0}, {10, 11, 165, 17, 0}, {10, 13, 165, 17, 0}, {11, 7, 165, 17, 0}, {11, 13, 165, 17, 0}, {11, 14, 165, 17, 0}}, {{5, 6, 165, 17, 0}, {5, 13, 165, 17, 0}, {5, 14, 165, 17, 0}, {6, 7, 165, 17, 0}, {6, 11, 165, 17, 0}, {6, 13, 165, 17, 0}, {7, 8, 165, 17, 0}, {7, 13, 165, 17, 0}, {8, 9, 165, 17, 0}, {8, 13, 165, 17, 0}, {9, 8, 165, 17, 0}, {9, 13, 165, 17, 0}, {10, 7, 165, 17, 0}, {10, 11, 165, 17, 0}, {10, 13, 165, 17, 0}, {11, 6, 165, 17, 0}, {11, 13, 165, 17, 0}, {11, 14, 165, 17, 0}}};
int fireworks[6][34][5] = {{{16, 6, 255, 0, 0}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}}, {{12, 6, 255, 0, 0}, {14, 6, 255, 0, 0}, {16, 6, 255, 0, 0}, {16, 17, 0, 0, 255}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}}, {{8, 6, 255, 0, 0}, {10, 6, 255, 0, 0}, {12, 6, 255, 0, 0}, {12, 17, 0, 0, 255}, {14, 17, 0, 0, 255}, {16, 17, 0, 0, 255}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}}, {{6, 6, 255, 0, 0}, {8, 6, 255, 0, 0}, {8, 17, 0, 0, 255}, {10, 6, 255, 0, 0}, {10, 17, 0, 0, 255}, {12, 17, 0, 0, 255}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}}, {{3, 6, 255, 0, 0}, {4, 4, 255, 0, 0}, {4, 8, 255, 0, 0}, {5, 17, 0, 0, 255}, {6, 3, 255, 0, 0}, {6, 6, 255, 0, 0}, {6, 9, 255, 0, 0}, {6, 15, 0, 0, 255}, {6, 19, 0, 0, 255}, {8, 4, 255, 0, 0}, {8, 8, 255, 0, 0}, {8, 14, 0, 0, 255}, {8, 17, 0, 0, 255}, {8, 20, 0, 0, 255}, {9, 6, 255, 0, 0}, {10, 15, 0, 0, 255}, {10, 19, 0, 0, 255}, {11, 17, 0, 0, 255}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}}, {{1, 1, 255, 0, 0}, {1, 6, 255, 0, 0}, {1, 11, 255, 0, 0}, {3, 6, 255, 0, 0}, {4, 4, 255, 0, 0}, {4, 8, 255, 0, 0}, {4, 15, 0, 0, 255}, {4, 19, 0, 0, 255}, {5, 17, 0, 0, 255}, {6, 1, 255, 0, 0}, {6, 3, 255, 0, 0}, {6, 6, 255, 0, 0}, {6, 9, 255, 0, 0}, {6, 11, 255, 0, 0}, {6, 13, 0, 0, 255}, {6, 15, 0, 0, 255}, {6, 19, 0, 0, 255}, {6, 21, 0, 0, 255}, {8, 4, 255, 0, 0}, {8, 8, 255, 0, 0}, {8, 14, 0, 0, 255}, {8, 17, 0, 0, 255}, {8, 20, 0, 0, 255}, {9, 6, 255, 0, 0}, {10, 13, 0, 0, 255}, {10, 15, 0, 0, 255}, {10, 19, 0, 0, 255}, {10, 21, 0, 0, 255}, {11, 1, 255, 0, 0}, {11, 6, 255, 0, 0}, {11, 11, 255, 0, 0}, {11, 17, 0, 0, 255}, {12, 15, 0, 0, 255}, {12, 19, 0, 0, 255}}};
int heart[2][96][5] = {{{4, 8, 244, 67, 54}, {4, 9, 244, 67, 54}, {4, 13, 244, 67, 54}, {4, 14, 244, 67, 54}, {5, 7, 244, 67, 54}, {5, 8, 244, 67, 54}, {5, 9, 244, 67, 54}, {5, 10, 244, 67, 54}, {5, 12, 244, 67, 54}, {5, 13, 244, 67, 54}, {5, 14, 244, 67, 54}, {5, 15, 244, 67, 54}, {6, 6, 244, 67, 54}, {6, 7, 244, 67, 54}, {6, 9, 244, 67, 54}, {6, 10, 244, 67, 54}, {6, 11, 244, 67, 54}, {6, 12, 244, 67, 54}, {6, 13, 244, 67, 54}, {6, 14, 244, 67, 54}, {6, 15, 244, 67, 54}, {6, 16, 213, 0, 0}, {7, 6, 244, 67, 54}, {7, 7, 244, 67, 54}, {7, 9, 244, 67, 54}, {7, 10, 244, 67, 54}, {7, 11, 244, 67, 54}, {7, 12, 244, 67, 54}, {7, 13, 244, 67, 54}, {7, 14, 244, 67, 54}, {7, 15, 244, 67, 54}, {7, 16, 213, 0, 0}, {8, 6, 244, 67, 54}, {8, 7, 244, 67, 54}, {8, 8, 244, 67, 54}, {8, 9, 244, 67, 54}, {8, 10, 244, 67, 54}, {8, 11, 244, 67, 54}, {8, 12, 244, 67, 54}, {8, 13, 244, 67, 54}, {8, 14, 244, 67, 54}, {8, 15, 244, 67, 54}, {8, 16, 213, 0, 0}, {9, 7, 244, 67, 54}, {9, 8, 244, 67, 54}, {9, 9, 244, 67, 54}, {9, 10, 244, 67, 54}, {9, 11, 244, 67, 54}, {9, 12, 244, 67, 54}, {9, 13, 244, 67, 54}, {9, 14, 244, 67, 54}, {9, 15, 213, 0, 0}, {10, 8, 244, 67, 54}, {10, 9, 244, 67, 54}, {10, 10, 244, 67, 54}, {10, 11, 244, 67, 54}, {10, 12, 244, 67, 54}, {10, 13, 213, 0, 0}, {10, 14, 213, 0, 0}, {11, 9, 244, 67, 54}, {11, 10, 244, 67, 54}, {11, 11, 244, 67, 54}, {11, 12, 213, 0, 0}, {11, 13, 213, 0, 0}, {12, 10, 213, 0, 0}, {12, 11, 213, 0, 0}, {12, 12, 213, 0, 0}, {13, 11, 213, 0, 0}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}, { -1, -1, 135, 135, 135}}, {{3, 8, 244, 143, 177}, {3, 9, 244, 143, 177}, {3, 13, 244, 143, 177}, {3, 14, 244, 143, 177}, {4, 7, 244, 143, 177}, {4, 8, 244, 67, 54}, {4, 9, 244, 67, 54}, {4, 10, 244, 143, 177}, {4, 12, 244, 143, 177}, {4, 13, 244, 67, 54}, {4, 14, 244, 67, 54}, {4, 15, 244, 143, 177}, {5, 6, 244, 143, 177}, {5, 7, 244, 67, 54}, {5, 8, 244, 67, 54}, {5, 9, 244, 67, 54}, {5, 10, 244, 67, 54}, {5, 11, 244, 143, 177}, {5, 12, 244, 67, 54}, {5, 13, 244, 67, 54}, {5, 14, 244, 67, 54}, {5, 15, 244, 67, 54}, {5, 16, 244, 143, 177}, {6, 5, 244, 143, 177}, {6, 6, 244, 67, 54}, {6, 7, 244, 67, 54}, {6, 9, 244, 67, 54}, {6, 10, 244, 67, 54}, {6, 11, 244, 67, 54}, {6, 12, 244, 67, 54}, {6, 13, 244, 67, 54}, {6, 14, 244, 67, 54}, {6, 15, 244, 67, 54}, {6, 16, 213, 0, 0}, {6, 17, 244, 143, 177}, {7, 5, 244, 143, 177}, {7, 6, 244, 67, 54}, {7, 7, 244, 67, 54}, {7, 9, 244, 67, 54}, {7, 10, 244, 67, 54}, {7, 11, 244, 67, 54}, {7, 12, 244, 67, 54}, {7, 13, 244, 67, 54}, {7, 14, 244, 67, 54}, {7, 15, 244, 67, 54}, {7, 16, 213, 0, 0}, {7, 17, 244, 143, 177}, {8, 5, 244, 143, 177}, {8, 6, 244, 67, 54}, {8, 7, 244, 67, 54}, {8, 8, 244, 67, 54}, {8, 9, 244, 67, 54}, {8, 10, 244, 67, 54}, {8, 11, 244, 67, 54}, {8, 12, 244, 67, 54}, {8, 13, 244, 67, 54}, {8, 14, 244, 67, 54}, {8, 15, 244, 67, 54}, {8, 16, 213, 0, 0}, {8, 17, 244, 143, 177}, {9, 6, 244, 143, 177}, {9, 7, 244, 67, 54}, {9, 8, 244, 67, 54}, {9, 9, 244, 67, 54}, {9, 10, 244, 67, 54}, {9, 11, 244, 67, 54}, {9, 12, 244, 67, 54}, {9, 13, 244, 67, 54}, {9, 14, 244, 67, 54}, {9, 15, 213, 0, 0}, {9, 16, 244, 143, 177}, {10, 7, 244, 143, 177}, {10, 8, 244, 67, 54}, {10, 9, 244, 67, 54}, {10, 10, 244, 67, 54}, {10, 11, 244, 67, 54}, {10, 12, 244, 67, 54}, {10, 13, 213, 0, 0}, {10, 14, 213, 0, 0}, {10, 15, 244, 143, 177}, {11, 8, 244, 143, 177}, {11, 9, 244, 67, 54}, {11, 10, 244, 67, 54}, {11, 11, 244, 67, 54}, {11, 12, 213, 0, 0}, {11, 13, 213, 0, 0}, {11, 14, 244, 143, 177}, {12, 9, 244, 143, 177}, {12, 10, 213, 0, 0}, {12, 11, 213, 0, 0}, {12, 12, 213, 0, 0}, {12, 13, 244, 143, 177}, {13, 10, 244, 143, 177}, {13, 11, 213, 0, 0}, {13, 12, 244, 143, 177}, {14, 11, 244, 143, 177}}};
int kirby[3][161][5] = {{{3, 10, 239, 154, 154}, {3, 11, 239, 154, 154}, {3, 12, 239, 154, 154}, {3, 13, 239, 154, 154}, {3, 14, 239, 154, 154}, {4, 8, 239, 154, 154}, {4, 9, 239, 154, 154}, {4, 10, 239, 154, 154}, {4, 11, 239, 154, 154}, {4, 12, 239, 154, 154}, {4, 13, 239, 154, 154}, {4, 14, 239, 154, 154}, {4, 15, 239, 154, 154}, {4, 16, 239, 154, 154}, {5, 7, 239, 154, 154}, {5, 8, 239, 154, 154}, {5, 9, 239, 154, 154}, {5, 10, 239, 154, 154}, {5, 11, 239, 154, 154}, {5, 12, 239, 154, 154}, {5, 13, 239, 154, 154}, {5, 14, 239, 154, 154}, {5, 15, 239, 154, 154}, {5, 16, 239, 154, 154}, {5, 17, 239, 154, 154}, {6, 7, 239, 154, 154}, {6, 8, 239, 154, 154}, {6, 9, 239, 154, 154}, {6, 10, 239, 154, 154}, {6, 11, 239, 154, 154}, {6, 12, 239, 154, 154}, {6, 13, 239, 154, 154}, {6, 14, 239, 154, 154}, {6, 15, 239, 154, 154}, {6, 16, 239, 154, 154}, {6, 17, 239, 154, 154}, {7, 6, 239, 154, 154}, {7, 7, 239, 154, 154}, {7, 8, 0, 0, 0}, {7, 9, 239, 154, 154}, {7, 10, 239, 154, 154}, {7, 11, 239, 154, 154}, {7, 12, 0, 0, 0}, {7, 13, 239, 154, 154}, {7, 14, 239, 154, 154}, {7, 15, 239, 154, 154}, {7, 16, 239, 154, 154}, {7, 17, 239, 154, 154}, {7, 18, 239, 154, 154}, {8, 6, 239, 154, 154}, {8, 7, 239, 154, 154}, {8, 8, 0, 0, 0}, {8, 9, 239, 154, 154}, {8, 10, 239, 154, 154}, {8, 11, 239, 154, 154}, {8, 12, 0, 0, 0}, {8, 13, 239, 154, 154}, {8, 14, 239, 154, 154}, {8, 15, 239, 154, 154}, {8, 16, 239, 154, 154}, {8, 17, 239, 154, 154}, {8, 18, 239, 154, 154}, {9, 5, 229, 115, 115}, {9, 6, 239, 154, 154}, {9, 7, 239, 154, 154}, {9, 8, 0, 0, 0}, {9, 9, 239, 154, 154}, {9, 10, 239, 154, 154}, {9, 11, 239, 154, 154}, {9, 12, 0, 0, 0}, {9, 13, 239, 154, 154}, {9, 14, 239, 154, 154}, {9, 15, 239, 154, 154}, {9, 16, 229, 115, 115}, {9, 17, 229, 115, 115}, {9, 18, 229, 115, 115}, {10, 5, 229, 115, 115}, {10, 6, 239, 154, 154}, {10, 7, 229, 115, 115}, {10, 8, 239, 154, 154}, {10, 9, 239, 154, 154}, {10, 10, 239, 154, 154}, {10, 11, 239, 154, 154}, {10, 12, 239, 154, 154}, {10, 13, 239, 154, 154}, {10, 14, 229, 115, 115}, {10, 15, 239, 154, 154}, {10, 16, 229, 115, 115}, {10, 17, 229, 115, 115}, {10, 18, 229, 115, 115}, {11, 5, 229, 115, 115}, {11, 6, 239, 154, 154}, {11, 7, 239, 154, 154}, {11, 8, 239, 154, 154}, {11, 9, 239, 154, 154}, {11, 10, 0, 0, 0}, {11, 11, 239, 154, 154}, {11, 12, 239, 154, 154}, {11, 13, 239, 154, 154}, {11, 14, 239, 154, 154}, {11, 15, 239, 154, 154}, {11, 16, 229, 115, 115}, {11, 17, 229, 115, 115}, {11, 18, 229, 115, 115}, {12, 7, 239, 154, 154}, {12, 8, 239, 154, 154}, {12, 9, 239, 154, 154}, {12, 10, 239, 154, 154}, {12, 11, 239, 154, 154}, {12, 12, 239, 154, 154}, {12, 13, 239, 154, 154}, {12, 14, 239, 154, 154}, {12, 15, 239, 154, 154}, {12, 16, 239, 154, 154}, {12, 17, 239, 154, 154}, {13, 5, 244, 67, 54}, {13, 6, 244, 67, 54}, {13, 7, 239, 154, 154}, {13, 8, 239, 154, 154}, {13, 9, 239, 154, 154}, {13, 10, 239, 154, 154}, {13, 11, 239, 154, 154}, {13, 12, 239, 154, 154}, {13, 13, 239, 154, 154}, {13, 14, 239, 154, 154}, {13, 15, 244, 67, 54}, {13, 16, 244, 67, 54}, {13, 17, 244, 67, 54}, {13, 18, 244, 67, 54}, {14, 4, 244, 67, 54}, {14, 5, 244, 67, 54}, {14, 6, 244, 67, 54}, {14, 7, 244, 67, 54}, {14, 8, 239, 154, 154}, {14, 9, 239, 154, 154}, {14, 10, 239, 154, 154}, {14, 11, 239, 154, 154}, {14, 12, 239, 154, 154}, {14, 13, 239, 154, 154}, {14, 14, 244, 67, 54}, {14, 15, 244, 67, 54}, {14, 16, 244, 67, 54}, {14, 17, 244, 67, 54}, {14, 18, 244, 67, 54}, {14, 19, 244, 67, 54}, {15, 4, 244, 67, 54}, {15, 5, 244, 67, 54}, {15, 6, 244, 67, 54}, {15, 7, 244, 67, 54}, {15, 8, 244, 67, 54}, {15, 9, 244, 67, 54}, {15, 10, 239, 154, 154}, {15, 11, 239, 154, 154}, {15, 12, 239, 154, 154}, {15, 13, 239, 154, 154}, {15, 14, 244, 67, 54}, {15, 15, 244, 67, 54}, {15, 16, 244, 67, 54}, {15, 17, 244, 67, 54}, {15, 18, 244, 67, 54}, {15, 19, 244, 67, 54}}, {{3, 10, 239, 154, 154}, {3, 11, 239, 154, 154}, {3, 12, 239, 154, 154}, {3, 13, 239, 154, 154}, {3, 14, 239, 154, 154}, {4, 8, 239, 154, 154}, {4, 9, 239, 154, 154}, {4, 10, 239, 154, 154}, {4, 11, 239, 154, 154}, {4, 12, 239, 154, 154}, {4, 13, 239, 154, 154}, {4, 14, 239, 154, 154}, {4, 15, 239, 154, 154}, {4, 16, 239, 154, 154}, {5, 7, 239, 154, 154}, {5, 8, 239, 154, 154}, {5, 9, 239, 154, 154}, {5, 10, 239, 154, 154}, {5, 11, 239, 154, 154}, {5, 12, 239, 154, 154}, {5, 13, 239, 154, 154}, {5, 14, 239, 154, 154}, {5, 15, 239, 154, 154}, {5, 16, 239, 154, 154}, {5, 17, 239, 154, 154}, {6, 7, 239, 154, 154}, {6, 8, 239, 154, 154}, {6, 9, 239, 154, 154}, {6, 10, 239, 154, 154}, {6, 11, 239, 154, 154}, {6, 12, 239, 154, 154}, {6, 13, 239, 154, 154}, {6, 14, 239, 154, 154}, {6, 15, 239, 154, 154}, {6, 16, 239, 154, 154}, {6, 17, 239, 154, 154}, {7, 6, 239, 154, 154}, {7, 7, 239, 154, 154}, {7, 8, 239, 154, 154}, {7, 9, 239, 154, 154}, {7, 10, 239, 154, 154}, {7, 11, 239, 154, 154}, {7, 12, 239, 154, 154}, {7, 13, 239, 154, 154}, {7, 14, 239, 154, 154}, {7, 15, 239, 154, 154}, {7, 16, 239, 154, 154}, {7, 17, 239, 154, 154}, {7, 18, 239, 154, 154}, {8, 6, 239, 154, 154}, {8, 7, 239, 154, 154}, {8, 8, 0, 0, 0}, {8, 9, 239, 154, 154}, {8, 10, 239, 154, 154}, {8, 11, 239, 154, 154}, {8, 12, 0, 0, 0}, {8, 13, 239, 154, 154}, {8, 14, 239, 154, 154}, {8, 15, 239, 154, 154}, {8, 16, 239, 154, 154}, {8, 17, 239, 154, 154}, {8, 18, 239, 154, 154}, {9, 5, 229, 115, 115}, {9, 6, 239, 154, 154}, {9, 7, 239, 154, 154}, {9, 8, 0, 0, 0}, {9, 9, 239, 154, 154}, {9, 10, 239, 154, 154}, {9, 11, 239, 154, 154}, {9, 12, 0, 0, 0}, {9, 13, 239, 154, 154}, {9, 14, 239, 154, 154}, {9, 15, 239, 154, 154}, {9, 16, 229, 115, 115}, {9, 17, 229, 115, 115}, {9, 18, 229, 115, 115}, {10, 5, 229, 115, 115}, {10, 6, 239, 154, 154}, {10, 7, 229, 115, 115}, {10, 8, 239, 154, 154}, {10, 9, 239, 154, 154}, {10, 10, 239, 154, 154}, {10, 11, 239, 154, 154}, {10, 12, 239, 154, 154}, {10, 13, 239, 154, 154}, {10, 14, 229, 115, 115}, {10, 15, 239, 154, 154}, {10, 16, 229, 115, 115}, {10, 17, 229, 115, 115}, {10, 18, 229, 115, 115}, {11, 5, 229, 115, 115}, {11, 6, 239, 154, 154}, {11, 7, 239, 154, 154}, {11, 8, 239, 154, 154}, {11, 9, 239, 154, 154}, {11, 10, 0, 0, 0}, {11, 11, 239, 154, 154}, {11, 12, 239, 154, 154}, {11, 13, 239, 154, 154}, {11, 14, 239, 154, 154}, {11, 15, 239, 154, 154}, {11, 16, 229, 115, 115}, {11, 17, 229, 115, 115}, {11, 18, 229, 115, 115}, {12, 7, 239, 154, 154}, {12, 8, 239, 154, 154}, {12, 9, 239, 154, 154}, {12, 10, 239, 154, 154}, {12, 11, 239, 154, 154}, {12, 12, 239, 154, 154}, {12, 13, 239, 154, 154}, {12, 14, 239, 154, 154}, {12, 15, 239, 154, 154}, {12, 16, 239, 154, 154}, {12, 17, 239, 154, 154}, {13, 5, 244, 67, 54}, {13, 6, 244, 67, 54}, {13, 7, 239, 154, 154}, {13, 8, 239, 154, 154}, {13, 9, 239, 154, 154}, {13, 10, 239, 154, 154}, {13, 11, 239, 154, 154}, {13, 12, 239, 154, 154}, {13, 13, 239, 154, 154}, {13, 14, 239, 154, 154}, {13, 15, 244, 67, 54}, {13, 16, 244, 67, 54}, {13, 17, 244, 67, 54}, {13, 18, 244, 67, 54}, {14, 4, 244, 67, 54}, {14, 5, 244, 67, 54}, {14, 6, 244, 67, 54}, {14, 7, 244, 67, 54}, {14, 8, 239, 154, 154}, {14, 9, 239, 154, 154}, {14, 10, 239, 154, 154}, {14, 11, 239, 154, 154}, {14, 12, 239, 154, 154}, {14, 13, 239, 154, 154}, {14, 14, 244, 67, 54}, {14, 15, 244, 67, 54}, {14, 16, 244, 67, 54}, {14, 17, 244, 67, 54}, {14, 18, 244, 67, 54}, {14, 19, 244, 67, 54}, {15, 4, 244, 67, 54}, {15, 5, 244, 67, 54}, {15, 6, 244, 67, 54}, {15, 7, 244, 67, 54}, {15, 8, 244, 67, 54}, {15, 9, 244, 67, 54}, {15, 10, 239, 154, 154}, {15, 11, 239, 154, 154}, {15, 12, 239, 154, 154}, {15, 13, 239, 154, 154}, {15, 14, 244, 67, 54}, {15, 15, 244, 67, 54}, {15, 16, 244, 67, 54}, {15, 17, 244, 67, 54}, {15, 18, 244, 67, 54}, {15, 19, 244, 67, 54}}, {{3, 10, 239, 154, 154}, {3, 11, 239, 154, 154}, {3, 12, 239, 154, 154}, {3, 13, 239, 154, 154}, {3, 14, 239, 154, 154}, {4, 8, 239, 154, 154}, {4, 9, 239, 154, 154}, {4, 10, 239, 154, 154}, {4, 11, 239, 154, 154}, {4, 12, 239, 154, 154}, {4, 13, 239, 154, 154}, {4, 14, 239, 154, 154}, {4, 15, 239, 154, 154}, {4, 16, 239, 154, 154}, {5, 7, 239, 154, 154}, {5, 8, 239, 154, 154}, {5, 9, 239, 154, 154}, {5, 10, 239, 154, 154}, {5, 11, 239, 154, 154}, {5, 12, 239, 154, 154}, {5, 13, 239, 154, 154}, {5, 14, 239, 154, 154}, {5, 15, 239, 154, 154}, {5, 16, 239, 154, 154}, {5, 17, 239, 154, 154}, {6, 7, 239, 154, 154}, {6, 8, 239, 154, 154}, {6, 9, 239, 154, 154}, {6, 10, 239, 154, 154}, {6, 11, 239, 154, 154}, {6, 12, 239, 154, 154}, {6, 13, 239, 154, 154}, {6, 14, 239, 154, 154}, {6, 15, 239, 154, 154}, {6, 16, 239, 154, 154}, {6, 17, 239, 154, 154}, {7, 6, 239, 154, 154}, {7, 7, 239, 154, 154}, {7, 8, 239, 154, 154}, {7, 9, 239, 154, 154}, {7, 10, 239, 154, 154}, {7, 11, 239, 154, 154}, {7, 12, 239, 154, 154}, {7, 13, 239, 154, 154}, {7, 14, 239, 154, 154}, {7, 15, 239, 154, 154}, {7, 16, 239, 154, 154}, {7, 17, 239, 154, 154}, {7, 18, 239, 154, 154}, {8, 6, 239, 154, 154}, {8, 7, 239, 154, 154}, {8, 8, 239, 154, 154}, {8, 9, 239, 154, 154}, {8, 10, 239, 154, 154}, {8, 11, 239, 154, 154}, {8, 12, 239, 154, 154}, {8, 13, 239, 154, 154}, {8, 14, 239, 154, 154}, {8, 15, 239, 154, 154}, {8, 16, 239, 154, 154}, {8, 17, 239, 154, 154}, {8, 18, 239, 154, 154}, {9, 5, 229, 115, 115}, {9, 6, 239, 154, 154}, {9, 7, 239, 154, 154}, {9, 8, 0, 0, 0}, {9, 9, 0, 0, 0}, {9, 10, 239, 154, 154}, {9, 11, 239, 154, 154}, {9, 12, 0, 0, 0}, {9, 13, 0, 0, 0}, {9, 14, 239, 154, 154}, {9, 15, 239, 154, 154}, {9, 16, 229, 115, 115}, {9, 17, 229, 115, 115}, {9, 18, 229, 115, 115}, {10, 5, 229, 115, 115}, {10, 6, 239, 154, 154}, {10, 7, 229, 115, 115}, {10, 8, 239, 154, 154}, {10, 9, 239, 154, 154}, {10, 10, 239, 154, 154}, {10, 11, 239, 154, 154}, {10, 12, 239, 154, 154}, {10, 13, 239, 154, 154}, {10, 14, 229, 115, 115}, {10, 15, 239, 154, 154}, {10, 16, 229, 115, 115}, {10, 17, 229, 115, 115}, {10, 18, 229, 115, 115}, {11, 5, 229, 115, 115}, {11, 6, 239, 154, 154}, {11, 7, 239, 154, 154}, {11, 8, 239, 154, 154}, {11, 9, 239, 154, 154}, {11, 10, 0, 0, 0}, {11, 11, 239, 154, 154}, {11, 12, 239, 154, 154}, {11, 13, 239, 154, 154}, {11, 14, 239, 154, 154}, {11, 15, 239, 154, 154}, {11, 16, 229, 115, 115}, {11, 17, 229, 115, 115}, {11, 18, 229, 115, 115}, {12, 7, 239, 154, 154}, {12, 8, 239, 154, 154}, {12, 9, 239, 154, 154}, {12, 10, 239, 154, 154}, {12, 11, 239, 154, 154}, {12, 12, 239, 154, 154}, {12, 13, 239, 154, 154}, {12, 14, 239, 154, 154}, {12, 15, 239, 154, 154}, {12, 16, 239, 154, 154}, {12, 17, 239, 154, 154}, {13, 5, 244, 67, 54}, {13, 6, 244, 67, 54}, {13, 7, 239, 154, 154}, {13, 8, 239, 154, 154}, {13, 9, 239, 154, 154}, {13, 10, 239, 154, 154}, {13, 11, 239, 154, 154}, {13, 12, 239, 154, 154}, {13, 13, 239, 154, 154}, {13, 14, 239, 154, 154}, {13, 15, 244, 67, 54}, {13, 16, 244, 67, 54}, {13, 17, 244, 67, 54}, {13, 18, 244, 67, 54}, {14, 4, 244, 67, 54}, {14, 5, 244, 67, 54}, {14, 6, 244, 67, 54}, {14, 7, 244, 67, 54}, {14, 8, 239, 154, 154}, {14, 9, 239, 154, 154}, {14, 10, 239, 154, 154}, {14, 11, 239, 154, 154}, {14, 12, 239, 154, 154}, {14, 13, 239, 154, 154}, {14, 14, 244, 67, 54}, {14, 15, 244, 67, 54}, {14, 16, 244, 67, 54}, {14, 17, 244, 67, 54}, {14, 18, 244, 67, 54}, {14, 19, 244, 67, 54}, {15, 4, 244, 67, 54}, {15, 5, 244, 67, 54}, {15, 6, 244, 67, 54}, {15, 7, 244, 67, 54}, {15, 8, 244, 67, 54}, {15, 9, 244, 67, 54}, {15, 10, 239, 154, 154}, {15, 11, 239, 154, 154}, {15, 12, 239, 154, 154}, {15, 13, 239, 154, 154}, {15, 14, 244, 67, 54}, {15, 15, 244, 67, 54}, {15, 16, 244, 67, 54}, {15, 17, 244, 67, 54}, {15, 18, 244, 67, 54}, {15, 19, 244, 67, 54}}};
int triforce[7][77][5] = {{{5, 11, 255, 235, 59}, {6, 10, 255, 235, 59}, {6, 11, 255, 235, 59}, {6, 12, 255, 235, 59}, {7, 10, 255, 235, 59}, {7, 11, 255, 235, 59}, {7, 12, 255, 235, 59}, {8, 9, 255, 235, 59}, {8, 10, 255, 235, 59}, {8, 11, 255, 235, 59}, {8, 12, 255, 235, 59}, {8, 13, 255, 235, 59}, {9, 8, 255, 235, 59}, {9, 9, 255, 235, 59}, {9, 10, 255, 235, 59}, {9, 11, 255, 235, 59}, {9, 12, 255, 235, 59}, {9, 13, 255, 235, 59}, {9, 14, 255, 235, 59}, {10, 8, 255, 235, 59}, {10, 9, 255, 235, 59}, {10, 10, 255, 235, 59}, {10, 11, 255, 235, 59}, {10, 12, 255, 235, 59}, {10, 13, 255, 235, 59}, {10, 14, 255, 235, 59}, {11, 7, 255, 235, 59}, {11, 8, 255, 235, 59}, {11, 14, 255, 235, 59}, {11, 15, 255, 235, 59}, {12, 6, 255, 235, 59}, {12, 7, 255, 235, 59}, {12, 8, 255, 235, 59}, {12, 9, 255, 235, 59}, {12, 13, 255, 235, 59}, {12, 14, 255, 235, 59}, {12, 15, 255, 235, 59}, {12, 16, 255, 235, 59}, {13, 5, 255, 235, 59}, {13, 6, 255, 235, 59}, {13, 7, 255, 235, 59}, {13, 8, 255, 235, 59}, {13, 9, 255, 235, 59}, {13, 10, 255, 235, 59}, {13, 12, 255, 235, 59}, {13, 13, 255, 235, 59}, {13, 14, 255, 235, 59}, {13, 15, 255, 235, 59}, {13, 16, 255, 235, 59}, {13, 17, 255, 235, 59}, {14, 5, 255, 235, 59}, {14, 6, 255, 235, 59}, {14, 7, 255, 235, 59}, {14, 8, 255, 235, 59}, {14, 9, 255, 235, 59}, {14, 10, 255, 235, 59}, {14, 12, 255, 235, 59}, {14, 13, 255, 235, 59}, {14, 14, 255, 235, 59}, {14, 15, 255, 235, 59}, {14, 16, 255, 235, 59}, {14, 17, 255, 235, 59}, {15, 4, 255, 235, 59}, {15, 5, 255, 235, 59}, {15, 6, 255, 235, 59}, {15, 7, 255, 235, 59}, {15, 8, 255, 235, 59}, {15, 9, 255, 235, 59}, {15, 10, 255, 235, 59}, {15, 11, 255, 235, 59}, {15, 12, 255, 235, 59}, {15, 13, 255, 235, 59}, {15, 14, 255, 235, 59}, {15, 15, 255, 235, 59}, {15, 16, 255, 235, 59}, {15, 17, 255, 235, 59}, {15, 18, 255, 235, 59}}, {{2, 11, 255, 235, 59}, {3, 10, 255, 235, 59}, {3, 11, 255, 235, 59}, {3, 12, 255, 235, 59}, {4, 10, 255, 235, 59}, {4, 11, 255, 235, 59}, {4, 12, 255, 235, 59}, {5, 9, 255, 235, 59}, {5, 10, 255, 235, 59}, {5, 11, 255, 235, 59}, {5, 12, 255, 235, 59}, {5, 13, 255, 235, 59}, {6, 8, 255, 235, 59}, {6, 9, 255, 235, 59}, {6, 10, 255, 235, 59}, {6, 11, 255, 235, 59}, {6, 12, 255, 235, 59}, {6, 13, 255, 235, 59}, {6, 14, 255, 235, 59}, {7, 8, 255, 235, 59}, {7, 9, 255, 235, 59}, {7, 10, 255, 235, 59}, {7, 11, 255, 235, 59}, {7, 12, 255, 235, 59}, {7, 13, 255, 235, 59}, {7, 14, 255, 235, 59}, {8, 7, 255, 235, 59}, {8, 8, 255, 235, 59}, {8, 14, 255, 235, 59}, {8, 15, 255, 235, 59}, {9, 6, 255, 235, 59}, {9, 7, 255, 235, 59}, {9, 8, 255, 235, 59}, {9, 9, 255, 235, 59}, {9, 13, 255, 235, 59}, {9, 14, 255, 235, 59}, {9, 15, 255, 235, 59}, {9, 16, 255, 235, 59}, {10, 5, 255, 235, 59}, {10, 6, 255, 235, 59}, {10, 7, 255, 235, 59}, {10, 8, 255, 235, 59}, {10, 9, 255, 235, 59}, {10, 10, 255, 235, 59}, {10, 12, 255, 235, 59}, {10, 13, 255, 235, 59}, {10, 14, 255, 235, 59}, {10, 15, 255, 235, 59}, {10, 16, 255, 235, 59}, {10, 17, 255, 235, 59}, {11, 5, 255, 235, 59}, {11, 6, 255, 235, 59}, {11, 7, 255, 235, 59}, {11, 8, 255, 235, 59}, {11, 9, 255, 235, 59}, {11, 10, 255, 235, 59}, {11, 12, 255, 235, 59}, {11, 13, 255, 235, 59}, {11, 14, 255, 235, 59}, {11, 15, 255, 235, 59}, {11, 16, 255, 235, 59}, {11, 17, 255, 235, 59}, {12, 4, 255, 235, 59}, {12, 5, 255, 235, 59}, {12, 6, 255, 235, 59}, {12, 7, 255, 235, 59}, {12, 8, 255, 235, 59}, {12, 9, 255, 235, 59}, {12, 10, 255, 235, 59}, {12, 11, 255, 235, 59}, {12, 12, 255, 235, 59}, {12, 13, 255, 235, 59}, {12, 14, 255, 235, 59}, {12, 15, 255, 235, 59}, {12, 16, 255, 235, 59}, {12, 17, 255, 235, 59}, {12, 18, 255, 235, 59}}, {{2, 11, 255, 235, 59}, {3, 10, 255, 235, 59}, {3, 11, 255, 235, 59}, {3, 12, 255, 235, 59}, {4, 10, 255, 235, 59}, {4, 11, 255, 235, 59}, {4, 12, 255, 235, 59}, {5, 9, 255, 235, 59}, {5, 10, 255, 235, 59}, {5, 11, 255, 235, 59}, {5, 12, 255, 235, 59}, {5, 13, 255, 235, 59}, {6, 8, 255, 235, 59}, {6, 9, 255, 235, 59}, {6, 10, 255, 235, 59}, {6, 11, 255, 235, 59}, {6, 12, 255, 235, 59}, {6, 13, 255, 235, 59}, {6, 14, 255, 235, 59}, {7, 8, 255, 235, 59}, {7, 9, 255, 235, 59}, {7, 10, 255, 235, 59}, {7, 11, 255, 235, 59}, {7, 12, 255, 235, 59}, {7, 13, 255, 235, 59}, {7, 14, 255, 235, 59}, {8, 7, 255, 193, 7}, {8, 8, 255, 235, 59}, {8, 14, 255, 235, 59}, {8, 15, 255, 235, 59}, {9, 6, 255, 235, 59}, {9, 7, 255, 235, 59}, {9, 8, 255, 193, 7}, {9, 9, 255, 235, 59}, {9, 13, 255, 235, 59}, {9, 14, 255, 235, 59}, {9, 15, 255, 235, 59}, {9, 16, 255, 235, 59}, {10, 5, 255, 235, 59}, {10, 6, 255, 235, 59}, {10, 7, 255, 235, 59}, {10, 8, 255, 235, 59}, {10, 9, 255, 193, 7}, {10, 10, 255, 235, 59}, {10, 12, 255, 235, 59}, {10, 13, 255, 235, 59}, {10, 14, 255, 235, 59}, {10, 15, 255, 235, 59}, {10, 16, 255, 235, 59}, {10, 17, 255, 235, 59}, {11, 5, 255, 235, 59}, {11, 6, 255, 235, 59}, {11, 7, 255, 235, 59}, {11, 8, 255, 235, 59}, {11, 9, 255, 235, 59}, {11, 10, 255, 193, 7}, {11, 12, 255, 235, 59}, {11, 13, 255, 235, 59}, {11, 14, 255, 235, 59}, {11, 15, 255, 235, 59}, {11, 16, 255, 235, 59}, {11, 17, 255, 235, 59}, {12, 4, 255, 235, 59}, {12, 5, 255, 235, 59}, {12, 6, 255, 235, 59}, {12, 7, 255, 235, 59}, {12, 8, 255, 235, 59}, {12, 9, 255, 235, 59}, {12, 10, 255, 235, 59}, {12, 11, 255, 193, 7}, {12, 12, 255, 235, 59}, {12, 13, 255, 235, 59}, {12, 14, 255, 235, 59}, {12, 15, 255, 235, 59}, {12, 16, 255, 235, 59}, {12, 17, 255, 235, 59}, {12, 18, 255, 235, 59}}, {{2, 11, 255, 235, 59}, {3, 10, 255, 235, 59}, {3, 11, 255, 235, 59}, {3, 12, 255, 235, 59}, {4, 10, 255, 235, 59}, {4, 11, 255, 235, 59}, {4, 12, 255, 235, 59}, {5, 9, 255, 235, 59}, {5, 10, 255, 235, 59}, {5, 11, 255, 235, 59}, {5, 12, 255, 235, 59}, {5, 13, 255, 235, 59}, {6, 8, 255, 235, 59}, {6, 9, 255, 235, 59}, {6, 10, 255, 235, 59}, {6, 11, 255, 235, 59}, {6, 12, 255, 235, 59}, {6, 13, 255, 235, 59}, {6, 14, 255, 235, 59}, {7, 8, 255, 193, 7}, {7, 9, 255, 235, 59}, {7, 10, 255, 235, 59}, {7, 11, 255, 235, 59}, {7, 12, 255, 235, 59}, {7, 13, 255, 235, 59}, {7, 14, 255, 235, 59}, {8, 7, 255, 193, 7}, {8, 8, 255, 193, 7}, {8, 14, 255, 235, 59}, {8, 15, 255, 235, 59}, {9, 6, 255, 235, 59}, {9, 7, 255, 235, 59}, {9, 8, 255, 193, 7}, {9, 9, 255, 193, 7}, {9, 13, 255, 235, 59}, {9, 14, 255, 235, 59}, {9, 15, 255, 235, 59}, {9, 16, 255, 235, 59}, {10, 5, 255, 235, 59}, {10, 6, 255, 235, 59}, {10, 7, 255, 235, 59}, {10, 8, 255, 235, 59}, {10, 9, 255, 193, 7}, {10, 10, 255, 193, 7}, {10, 12, 255, 235, 59}, {10, 13, 255, 235, 59}, {10, 14, 255, 235, 59}, {10, 15, 255, 235, 59}, {10, 16, 255, 235, 59}, {10, 17, 255, 235, 59}, {11, 5, 255, 235, 59}, {11, 6, 255, 235, 59}, {11, 7, 255, 235, 59}, {11, 8, 255, 235, 59}, {11, 9, 255, 235, 59}, {11, 10, 255, 193, 7}, {11, 12, 255, 235, 59}, {11, 13, 255, 235, 59}, {11, 14, 255, 235, 59}, {11, 15, 255, 235, 59}, {11, 16, 255, 235, 59}, {11, 17, 255, 235, 59}, {12, 4, 255, 193, 7}, {12, 5, 255, 235, 59}, {12, 6, 255, 235, 59}, {12, 7, 255, 235, 59}, {12, 8, 255, 235, 59}, {12, 9, 255, 235, 59}, {12, 10, 255, 235, 59}, {12, 11, 255, 193, 7}, {12, 12, 255, 193, 7}, {12, 13, 255, 235, 59}, {12, 14, 255, 235, 59}, {12, 15, 255, 235, 59}, {12, 16, 255, 235, 59}, {12, 17, 255, 235, 59}, {12, 18, 255, 235, 59}}, {{2, 11, 255, 235, 59}, {3, 10, 255, 235, 59}, {3, 11, 255, 235, 59}, {3, 12, 255, 235, 59}, {4, 10, 255, 235, 59}, {4, 11, 255, 235, 59}, {4, 12, 255, 235, 59}, {5, 9, 255, 235, 59}, {5, 10, 255, 235, 59}, {5, 11, 255, 235, 59}, {5, 12, 255, 193, 7}, {5, 13, 255, 235, 59}, {6, 8, 255, 193, 7}, {6, 9, 255, 235, 59}, {6, 10, 255, 235, 59}, {6, 11, 255, 235, 59}, {6, 12, 255, 235, 59}, {6, 13, 255, 193, 7}, {6, 14, 255, 235, 59}, {7, 8, 255, 193, 7}, {7, 9, 255, 193, 7}, {7, 10, 255, 235, 59}, {7, 11, 255, 235, 59}, {7, 12, 255, 235, 59}, {7, 13, 255, 235, 59}, {7, 14, 255, 235, 59}, {8, 7, 255, 193, 7}, {8, 8, 255, 193, 7}, {8, 14, 255, 193, 7}, {8, 15, 255, 235, 59}, {9, 6, 255, 235, 59}, {9, 7, 255, 235, 59}, {9, 8, 255, 193, 7}, {9, 9, 255, 193, 7}, {9, 13, 255, 235, 59}, {9, 14, 255, 235, 59}, {9, 15, 255, 193, 7}, {9, 16, 255, 235, 59}, {10, 5, 255, 235, 59}, {10, 6, 255, 235, 59}, {10, 7, 255, 235, 59}, {10, 8, 255, 235, 59}, {10, 9, 255, 193, 7}, {10, 10, 255, 193, 7}, {10, 12, 255, 235, 59}, {10, 13, 255, 235, 59}, {10, 14, 255, 235, 59}, {10, 15, 255, 235, 59}, {10, 16, 255, 193, 7}, {10, 17, 255, 235, 59}, {11, 5, 255, 235, 59}, {11, 6, 255, 235, 59}, {11, 7, 255, 235, 59}, {11, 8, 255, 235, 59}, {11, 9, 255, 235, 59}, {11, 10, 255, 193, 7}, {11, 12, 255, 193, 7}, {11, 13, 255, 235, 59}, {11, 14, 255, 235, 59}, {11, 15, 255, 235, 59}, {11, 16, 255, 235, 59}, {11, 17, 255, 235, 59}, {12, 4, 255, 193, 7}, {12, 5, 255, 193, 7}, {12, 6, 255, 235, 59}, {12, 7, 255, 235, 59}, {12, 8, 255, 235, 59}, {12, 9, 255, 235, 59}, {12, 10, 255, 235, 59}, {12, 11, 255, 193, 7}, {12, 12, 255, 193, 7}, {12, 13, 255, 193, 7}, {12, 14, 255, 235, 59}, {12, 15, 255, 235, 59}, {12, 16, 255, 235, 59}, {12, 17, 255, 193, 7}, {12, 18, 255, 235, 59}}, {{2, 11, 255, 235, 59}, {3, 10, 255, 235, 59}, {3, 11, 255, 193, 7}, {3, 12, 255, 235, 59}, {4, 10, 255, 235, 59}, {4, 11, 255, 235, 59}, {4, 12, 255, 193, 7}, {5, 9, 255, 235, 59}, {5, 10, 255, 235, 59}, {5, 11, 255, 235, 59}, {5, 12, 255, 193, 7}, {5, 13, 255, 235, 59}, {6, 8, 255, 193, 7}, {6, 9, 255, 193, 7}, {6, 10, 255, 235, 59}, {6, 11, 255, 235, 59}, {6, 12, 255, 235, 59}, {6, 13, 255, 193, 7}, {6, 14, 255, 235, 59}, {7, 8, 255, 193, 7}, {7, 9, 255, 193, 7}, {7, 10, 255, 193, 7}, {7, 11, 255, 235, 59}, {7, 12, 255, 235, 59}, {7, 13, 255, 235, 59}, {7, 14, 255, 193, 7}, {8, 7, 255, 193, 7}, {8, 8, 255, 193, 7}, {8, 14, 255, 193, 7}, {8, 15, 255, 235, 59}, {9, 6, 255, 235, 59}, {9, 7, 255, 235, 59}, {9, 8, 255, 193, 7}, {9, 9, 255, 193, 7}, {9, 13, 255, 235, 59}, {9, 14, 255, 235, 59}, {9, 15, 255, 193, 7}, {9, 16, 255, 235, 59}, {10, 5, 255, 235, 59}, {10, 6, 255, 235, 59}, {10, 7, 255, 235, 59}, {10, 8, 255, 235, 59}, {10, 9, 255, 193, 7}, {10, 10, 255, 193, 7}, {10, 12, 255, 193, 7}, {10, 13, 255, 235, 59}, {10, 14, 255, 235, 59}, {10, 15, 255, 235, 59}, {10, 16, 255, 193, 7}, {10, 17, 255, 235, 59}, {11, 5, 255, 193, 7}, {11, 6, 255, 235, 59}, {11, 7, 255, 235, 59}, {11, 8, 255, 235, 59}, {11, 9, 255, 235, 59}, {11, 10, 255, 193, 7}, {11, 12, 255, 193, 7}, {11, 13, 255, 193, 7}, {11, 14, 255, 235, 59}, {11, 15, 255, 235, 59}, {11, 16, 255, 235, 59}, {11, 17, 255, 193, 7}, {12, 4, 255, 193, 7}, {12, 5, 255, 193, 7}, {12, 6, 255, 193, 7}, {12, 7, 255, 235, 59}, {12, 8, 255, 235, 59}, {12, 9, 255, 235, 59}, {12, 10, 255, 235, 59}, {12, 11, 255, 193, 7}, {12, 12, 255, 193, 7}, {12, 13, 255, 193, 7}, {12, 14, 255, 193, 7}, {12, 15, 255, 235, 59}, {12, 16, 255, 235, 59}, {12, 17, 255, 193, 7}, {12, 18, 255, 235, 59}}, {{2, 11, 255, 193, 7}, {3, 10, 255, 235, 59}, {3, 11, 255, 193, 7}, {3, 12, 255, 193, 7}, {4, 10, 255, 235, 59}, {4, 11, 255, 235, 59}, {4, 12, 255, 193, 7}, {5, 9, 255, 193, 7}, {5, 10, 255, 235, 59}, {5, 11, 255, 235, 59}, {5, 12, 255, 193, 7}, {5, 13, 255, 193, 7}, {6, 8, 255, 193, 7}, {6, 9, 255, 193, 7}, {6, 10, 255, 193, 7}, {6, 11, 255, 235, 59}, {6, 12, 255, 235, 59}, {6, 13, 255, 193, 7}, {6, 14, 255, 193, 7}, {7, 8, 255, 193, 7}, {7, 9, 255, 193, 7}, {7, 10, 255, 193, 7}, {7, 11, 255, 193, 7}, {7, 12, 255, 235, 59}, {7, 13, 255, 235, 59}, {7, 14, 255, 193, 7}, {8, 7, 255, 193, 7}, {8, 8, 255, 193, 7}, {8, 14, 255, 193, 7}, {8, 15, 255, 193, 7}, {9, 6, 255, 235, 59}, {9, 7, 255, 235, 59}, {9, 8, 255, 193, 7}, {9, 9, 255, 193, 7}, {9, 13, 255, 193, 7}, {9, 14, 255, 235, 59}, {9, 15, 255, 193, 7}, {9, 16, 255, 193, 7}, {10, 5, 255, 193, 7}, {10, 6, 255, 235, 59}, {10, 7, 255, 235, 59}, {10, 8, 255, 235, 59}, {10, 9, 255, 193, 7}, {10, 10, 255, 193, 7}, {10, 12, 255, 193, 7}, {10, 13, 255, 193, 7}, {10, 14, 255, 235, 59}, {10, 15, 255, 235, 59}, {10, 16, 255, 193, 7}, {10, 17, 255, 193, 7}, {11, 5, 255, 193, 7}, {11, 6, 255, 193, 7}, {11, 7, 255, 235, 59}, {11, 8, 255, 235, 59}, {11, 9, 255, 235, 59}, {11, 10, 255, 193, 7}, {11, 12, 255, 193, 7}, {11, 13, 255, 193, 7}, {11, 14, 255, 193, 7}, {11, 15, 255, 235, 59}, {11, 16, 255, 235, 59}, {11, 17, 255, 193, 7}, {12, 4, 255, 193, 7}, {12, 5, 255, 193, 7}, {12, 6, 255, 193, 7}, {12, 7, 255, 193, 7}, {12, 8, 255, 235, 59}, {12, 9, 255, 235, 59}, {12, 10, 255, 235, 59}, {12, 11, 255, 193, 7}, {12, 12, 255, 193, 7}, {12, 13, 255, 193, 7}, {12, 14, 255, 193, 7}, {12, 15, 255, 193, 7}, {12, 16, 255, 235, 59}, {12, 17, 255, 193, 7}, {12, 18, 255, 193, 7}}};

int width = 24;
int height = 18;
//int width = 16;
//int height = 16;

void setup() {
  strip.begin();

  Wire.begin(9);
  Wire.onReceive(receiveEvent);
  
  Serial.begin(9600);
}

int PROGSTATE = 4, newstate = 3;

void loop() {
  Serial.print("state is ");
  Serial.println(PROGSTATE);
  
  switch (PROGSTATE) {
  case 0:
    emote();
    break;
  case 1:
    glhf();
    break;
  case 2:
    gg();
    break;
  case 3:
    pong();
    break;
  case 4:
    text();
    break;
  }
}

bool canGG = false;
char text_s[256];
int textpos = 0;

void receiveEvent(int x)
{
  Serial.print("recieved ");
  Serial.print(x);
  Serial.println(" :");
  
  if (Wire.available() < 1) return;
  int t = Wire.read();
  Serial.print("t = ");
  Serial.println(t);
  
  if (t == 1){ //emoji
    if (Wire.available() < 1) return;
    int c = Wire.read();
    
    Serial.print("PROGSTATE = ");
    Serial.println(c);
  
    if (0<= c && c <= 3)
      PROGSTATE = c;

    if (c == 2 && !canGG)
      PROGSTATE = 3;
    
    if (c == 0){
      canGG = true;
      
      if (Wire.available() < 1) return;
      int e = Wire.read();

      Serial.print("newstate = ");
      Serial.println(e);
      if (0 <= e && e <= 15)
        newstate = e;
    }
  }else if (t == 2){ //text
    int i = 0;
    bool changed = false;
    while (Wire.available() > 0 && i < 255){
      char c = Wire.read();
      changed = changed || (text_s[i] != c);
      text_s[i++] = c;
    }
    changed = changed || (text_s[i] != 0);
    text_s[i] = 0;

    if (changed)
      textpos = 0;
    
    Serial.println(text_s);
    PROGSTATE = 4;
  }else if (t == 3){ //pong
    Serial.println("PONG");
    PROGSTATE = 3;
  }

  //should never print anything
  if (Wire.available() > 0)
    Serial.print("Spare data: ");
    
  while (Wire.available() > 0){
    int c = Wire.read();
    Serial.print(c);
    Serial.print(" ");
  }
  
  Serial.println(" ");
}


void set(int i, int j, int r, int g, int b) {
  if (i < 0 || j < 0 || i >= height || j >= width) return;

  if (i & 1)
    j = width - 1 - j;
  i = height - 1 - i;

  strip.setPixelColor(width * i + j, r, g, b);
}

void set(int i, int j, int x) {
  if (i < 0 || j < 0 || i >= height || j >= width) return;

  if (i & 1)
    j = width - 1 - j;
  i = height - 1 - i;

  strip.setPixelColor(width * i + j, x);
}

int letters[26][22][2] = {{{7,0},{7,1},{7,2},{7,3},{8,3},{9,0},{9,1},{9,2},{9,3},{10,0},{10,3},{11,0},{11,1},{11,2},{11,3}},{{5,0},{6,0},{7,0},{7,1},{7,2},{8,0},{8,3},{9,0},{9,3},{10,0},{10,3},{11,0},{11,1},{11,2}},{{7,1},{7,2},{7,3},{8,0},{9,0},{10,0},{11,1},{11,2},{11,3}},{{5,3},{6,3},{7,1},{7,2},{7,3},{8,0},{8,3},{9,0},{9,3},{10,0},{10,3},{11,1},{11,2},{11,3}},{{7,1},{7,2},{8,0},{8,3},{9,0},{9,1},{9,2},{9,3},{10,0},{11,1},{11,2},{11,3}},{{5,1},{5,2},{5,3},{6,1},{7,0},{7,1},{7,2},{8,1},{9,1},{10,1},{11,1}},{{7,0},{7,1},{7,2},{7,3},{7,4},{8,0},{8,3},{9,0},{9,1},{9,2},{9,3},{10,0},{11,1},{11,2},{11,3},{11,4},{12,0},{12,4},{13,0},{13,1},{13,2},{13,3}},{{5,0},{6,0},{7,0},{7,1},{7,2},{7,3},{8,0},{8,3},{9,0},{9,3},{10,0},{10,3},{11,0},{11,3}},{{5,0},{7,0},{8,0},{9,0},{10,0},{11,0}},{{5,1},{7,1},{8,1},{9,1},{10,1},{11,1},{12,1},{13,0},{13,1}},{{5,0},{6,0},{7,0},{7,3},{8,0},{8,2},{9,0},{9,1},{10,0},{10,2},{11,0},{11,3}},{{5,0},{6,0},{7,0},{8,0},{9,0},{10,0},{11,0}},{{7,0},{7,1},{7,2},{7,3},{7,4},{7,5},{7,6},{8,0},{8,3},{8,6},{9,0},{9,3},{9,6},{10,0},{10,3},{10,6},{11,0},{11,3},{11,6}},{{7,0},{7,1},{7,2},{7,3},{8,0},{8,3},{9,0},{9,3},{10,0},{10,3},{11,0},{11,3}},{{7,0},{7,1},{7,2},{7,3},{8,0},{8,3},{9,0},{9,3},{10,0},{10,3},{11,0},{11,1},{11,2},{11,3}},{{7,0},{7,1},{7,2},{8,0},{8,3},{9,0},{9,3},{10,0},{10,3},{11,0},{11,1},{11,2},{12,0},{13,0}},{{7,1},{7,2},{7,3},{8,0},{8,3},{9,0},{9,3},{10,0},{10,3},{11,1},{11,2},{11,3},{12,3},{13,3}},{{7,0},{7,1},{7,2},{8,0},{9,0},{10,0},{11,0}},{{7,0},{7,1},{7,2},{8,0},{9,1},{9,2},{10,2},{11,0},{11,1},{11,2}},{{6,1},{7,0},{7,1},{7,2},{8,1},{9,1},{10,1},{11,1},{11,2}},{{7,0},{7,3},{8,0},{8,3},{9,0},{9,3},{10,0},{10,3},{11,0},{11,1},{11,2},{11,3}},{{7,0},{7,4},{8,1},{8,4},{9,1},{9,4},{10,2},{10,3},{11,2},{11,3}},{{7,0},{7,3},{7,4},{7,7},{8,1},{8,3},{8,4},{8,6},{9,1},{9,3},{9,4},{9,6},{10,1},{10,2},{10,5},{10,6},{11,2},{11,5}},{{7,0},{7,3},{8,1},{8,2},{9,1},{9,2},{10,1},{10,2},{11,0},{11,3}},{{7,0},{7,4},{8,0},{8,3},{9,1},{9,3},{10,1},{10,3},{11,2},{12,2},{13,1}},{{7,0},{7,1},{7,2},{7,3},{8,2},{9,1},{9,2},{10,0},{10,1},{11,0},{11,1},{11,2},{11,3}}};
int l_widths[26] = {4,4,4,4,4,4,5,4,1,2,4,1,7,4,4,4,4,3,3,3,4,5,8,4,5,4};
int l_pix[26] = {15, 14, 9, 14, 12, 11, 22, 14, 6, 9, 12, 7, 19, 12, 14, 14, 14, 7, 10, 9, 12, 10, 18, 10, 11, 13};

void text(){
  for (int i = 0; i < PIXEL_COUNT; i++)
    strip.setPixelColor(i, 0, 0, 0);

  int text_width = getw();

  Serial.print("text_width: ");
  Serial.println(text_width);
  Serial.print("textpos: ");
  Serial.println(textpos);

  int lpad = textpos;
  int i = -1;
  while(text_s[++i]){
    if (text_s[i] == ' '){
      lpad += 4;
      continue;
    }
    
    int c = text_s[i] - 'a';
    for (int j=0;j<l_pix[c];j++)
      set(letters[c][j][0],letters[c][j][1] + lpad - text_width,165,165,165);
    
    lpad += 1 + l_widths[c];
  }

  int md = text_width + width;
  textpos = (textpos - 1 + md)%md;
  
  strip.show();
  delay(50);
}

int getw(){
  int ret = 0;
  
  int i = -1;
  while(text_s[++i]){
    if (text_s[i] == ' '){
      ret += 4;
      continue;
    }
    
    int c = text_s[i] - 'a';
    ret += 1 + l_widths[c];
  }

  return ret - 1;
}

int state = -1, frame = 0;

void emote() {
  if (state == newstate)
    frame++;
  else
    frame = 0;

  state = newstate;
  int rf;

  Serial.print("emoji state is ");
  Serial.print(state);
  Serial.print(", ");
  Serial.print(frame);
  Serial.print(": ");
  
  for (int i = 0; i < PIXEL_COUNT; i++)
    strip.setPixelColor(i, 0, 0, 0);


  switch(state) {
  case 0:
    rf = (frame % 40) > 31;
    Serial.print("rf is ");
    Serial.println(rf);
    for (int i = 0; i < sizeof(happy[rf]) / sizeof(happy[rf][0]); i++)
      set(happy[rf][i][0], happy[rf][i][1], 165, 165, 165);
    break;
  case 4:
    rf = max((frame % 40) / 5 - 4, 0);
    for (int i = 0; i < sizeof(sad[rf]) / sizeof(sad[rf][0]); i++)
      set(sad[rf][i][0], sad[rf][i][1], 165, 165, 165);
    break;
  case 14:
    rf = max((frame % 40) / 5 - 4, 0);
    for (int i = 0; i < sizeof(wink[rf]) / sizeof(wink[rf][0]); i++)
      set(wink[rf][i][0], wink[rf][i][1], 165, 165, 165);
    break;
  case 2:
    rf = frame % 40 > 13;
    for (int i = 0; i < sizeof(dizzy[rf]) / sizeof(dizzy[rf][0]); i++)
      set(dizzy[rf][i][0], dizzy[rf][i][1], 165, 165, 165);
    break;
  case 1:
    rf = frame % 40 / 20;
    for (int i = 0; i < sizeof(face3[rf]) / sizeof(face3[rf][0]); i++)
      set(face3[rf][i][0], face3[rf][i][1], face3[rf][i][2], face3[rf][i][3], face3[rf][i][4]);
    break;
  case 6:
    rf = frame % 40 / 10;
    for (int i = 0; i < sizeof(dance[rf]) / sizeof(dance[rf][0]); i++)
      set(dance[rf][i][0], dance[rf][i][1], dance[rf][i][2], dance[rf][i][3], dance[rf][i][4]);
    break;
  case 5:
    for (int i = 0; i < sizeof(fite[0]) / sizeof(fite[0][0]); i++)
      set(fite[0][i][0], fite[0][i][1], fite[0][i][2], fite[0][i][3], fite[0][i][4]);
    break;
  case 11:
    rf = frame % 40 > 13;
    for (int i = 0; i < sizeof(lenny[0]) / sizeof(lenny[0][0]); i++)
      set(lenny[0][i][0], lenny[0][i][1], lenny[0][i][2], lenny[0][i][3], lenny[0][i][4]);
    break;
  case 10:
    rf = frame % 40 / 20;
    for (int i = 0; i < sizeof(metanight[rf]) / sizeof(metanight[rf][0]); i++)
      set(metanight[rf][i][0], metanight[rf][i][1], metanight[rf][i][2], metanight[rf][i][3], metanight[rf][i][4]);
    break;
  case 3:
    for (int i = 0; i < sizeof(O_O[0]) / sizeof(O_O[0][0]); i++)
      set(O_O[0][i][0], O_O[0][i][1], O_O[0][i][2], O_O[0][i][3], O_O[0][i][4]);
    break;
  case 15:
    for (int i = 0; i < sizeof(sunglasses[0]) / sizeof(sunglasses[0][0]); i++)
      set(sunglasses[0][i][0], sunglasses[0][i][1], sunglasses[0][i][2], sunglasses[0][i][3], sunglasses[0][i][4]);
    break;
  case 8:
    rf = frame % 40 / 20;
    for (int i = 0; i < sizeof(angry[rf]) / sizeof(angry[rf][0]); i++)
      set(angry[rf][i][0], angry[rf][i][1], angry[rf][i][2], angry[rf][i][3], angry[rf][i][4]);
    break;
  case 9:
    rf = min(frame % 40 / 6, 5);
    Serial.println(rf);
    for (int i = 0; i < sizeof(fireworks[rf]) / sizeof(fireworks[rf][0]); i++)
      set(fireworks[rf][i][0], fireworks[rf][i][1], fireworks[rf][i][2], fireworks[rf][i][3], fireworks[rf][i][4]);
    break;
  case 7:
    rf = frame % 40 / 20;
    for (int i = 0; i < sizeof(heart[rf]) / sizeof(heart[rf][0]); i++)
      set(heart[rf][i][0], heart[rf][i][1], heart[rf][i][2], heart[rf][i][3], heart[rf][i][4]);
    break;
  case 13:
    rf = min(frame % 40 / 13, 2);
    for (int i = 0; i < sizeof(kirby[rf]) / sizeof(kirby[rf][0]); i++)
      set(kirby[rf][i][0], kirby[rf][i][1], kirby[rf][i][2], kirby[rf][i][3], kirby[rf][i][4]);
    break;
  case 12:
    rf = frame % 40 / 6;
    for (int i = 0; i < sizeof(triforce[rf]) / sizeof(triforce[rf][0]); i++)
      set(triforce[rf][i][0], triforce[rf][i][1], triforce[rf][i][2], triforce[rf][i][3], triforce[rf][i][4]);
    break;

  }
  
  
  strip.show();
  delay(100);
}

int p1 = 0, p2 = 0;
int bx = 12, by = 9;
int vx = 1, vy = 1;

int m = 0;
int history[3] = {0, 0, 0};

void pong() {

  for (int i = 0; i < PIXEL_COUNT; i++)
    strip.setPixelColor(i, 0, 0, 0);

  for (int i = 0; i < 5; i++)
    set((p1 + i) % height, 0, 0, 0, 255);

  for (int i = 0; i < 5; i++)
    set((p2 + i) % height, 23, 255, 0, 0);

  set(by, bx, 255, 255, 255);

  if (bx == 0)
    if (p1 <= by && by <= p1 + 5)
      vx *= -1;
    else {
      bx = 12;
      by = 9;
      vx = 1;
      vy = 1;
    }
  else if (bx == 23)
    if (p2 <= by && by <= p2 + 5)
      vx *= -1;
    else {
      bx = 12;
      by = 9;
      vx = 1;
      vy = 1;
    }

  if (by == 0 || by == 17)
    vy *= -1;

  bx += vx;
  by += vy;

  if (m != 0 && m != 4 && m != 7 && m != 11 && m != 14) {
    if (2*by - history[0] < p1 + 2) p1--;
    else if (2*by - history[0] > p1 + 2) p1++;
  }
  if (m != 0 && m != 7) {
    if (by < p2 + 2) p2--;
    else if (by > p2 + 2) p2++;
  }

  history[2] = history[1];
  history[1] = history[0];
  history[0] = by;
  m = (m + 1) % 17;

  strip.show();
  delay(40);
}

int gg_c = 0;
int gg_pic[72][5] = {{3, 20}, {4, 4}, {4, 5}, {4, 6}, {4, 7}, {4, 8}, {4, 9}, {4, 12}, {4, 13}, {4, 14}, {4, 15}, {4, 16}, {4, 17}, {4, 20}, {5, 3}, {5, 8}, {5, 11}, {5, 16}, {5, 20}, {6, 3}, {6, 8}, {6, 11}, {6, 16}, {6, 20}, {7, 3}, {7, 8}, {7, 11}, {7, 16}, {7, 20}, {8, 4}, {8, 5}, {8, 6}, {8, 7}, {8, 12}, {8, 13}, {8, 14}, {8, 15}, {8, 20}, {9, 3}, {9, 11}, {9, 20}, {10, 4}, {10, 5}, {10, 6}, {10, 7}, {10, 8}, {10, 12}, {10, 13}, {10, 14}, {10, 15}, {10, 16}, {10, 20}, {11, 3}, {11, 9}, {11, 11}, {11, 17}, {12, 3}, {12, 9}, {12, 11}, {12, 17}, {12, 20}, {13, 4}, {13, 5}, {13, 6}, {13, 7}, {13, 8}, {13, 12}, {13, 13}, {13, 14}, {13, 15}, {13, 16}, {13, 20}};
void gg() {
  for (int i = 0; i < PIXEL_COUNT; i++)
    strip.setPixelColor(i, 0, 0, 0);
  for (int i = 0; i < sizeof(gg_pic) / sizeof(gg_pic[0]); i++)
    set(gg_pic[i][0], gg_pic[i][1], Wheel(gg_c));

  gg_c = (gg_c + 1) & 255;
  strip.show();
  delay(100);
}

int glhf_c = 0;
int glhf_pic[50][2] = {{6, 3}, {6, 4}, {6, 5}, {6, 6}, {6, 9}, {6, 13}, {6, 16}, {6, 19}, {6, 20}, {6, 21}, {7, 2}, {7, 3}, {7, 6}, {7, 9}, {7, 13}, {7, 16}, {7, 19}, {8, 2}, {8, 9}, {8, 13}, {8, 14}, {8, 15}, {8, 16}, {8, 19}, {8, 20}, {8, 21}, {9, 2}, {9, 5}, {9, 6}, {9, 9}, {9, 13}, {9, 16}, {9, 19}, {10, 2}, {10, 3}, {10, 6}, {10, 9}, {10, 13}, {10, 16}, {10, 19}, {11, 3}, {11, 4}, {11, 5}, {11, 6}, {11, 9}, {11, 10}, {11, 11}, {11, 13}, {11, 16}, {11, 19}};
void glhf() {
  for (int i = 0; i < PIXEL_COUNT; i++)
    strip.setPixelColor(i, 0, 0, 0);
  for (int i = 0; i < sizeof(glhf_pic) / sizeof(glhf_pic[0]); i++)
    set(glhf_pic[i][0], glhf_pic[i][1], Wheel(glhf_c));

  glhf_c = (glhf_c + 1) & 255;
  strip.show();
  delay(100);
}

uint32_t Wheel(byte WheelPos) {
  WheelPos = 255 - WheelPos;
  if(WheelPos < 85) {
    return strip.Color(255 - WheelPos * 3, 0, WheelPos * 3);
  }
  if(WheelPos < 170) {
    WheelPos -= 85;
    return strip.Color(0, WheelPos * 3, 255 - WheelPos * 3);
  }
  WheelPos -= 170;
  return strip.Color(WheelPos * 3, 255 - WheelPos * 3, 0);
}

